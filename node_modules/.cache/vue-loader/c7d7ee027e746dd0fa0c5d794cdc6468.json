{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\src\\components\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\src\\components\\home.vue","mtime":1573306615500},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport io from 'socket.io-client';\r\nvar socket = io('127.0.0.1:3535');\r\nexport default {\r\n  name: 'home',\r\n\r\n    data : () => ({\r\n      pseudo: '',\r\n      password :'',\r\n      errPseudo : false,\r\n      log : []\r\n    }),\r\n\r\n    methods :{\r\n      //Connexion de l'utilisateur\r\n      //Envoyer juste le pseudo au serveur et stocker dans une variable de session\r\n      session : function(pseudo, password){\r\n        if (pseudo != '' && password != ''){\r\n          this.errPseudo = false;\r\n          this.pseudo = pseudo;\r\n          this.password = password;\r\n          // Enregistrement de la saisie utilisateur dans le stockage de session\r\n          this.log.push(pseudo);\r\n          this.log.push(password);\r\n          socket.emit('connexion', this.log);\r\n          this.log = [];\r\n        }\r\n        else {\r\n          this.errPseudo = true;\r\n        }\r\n      }\r\n    },\r\n\r\n    \r\n    props: {\r\n      msg: String,\r\n    },\r\n\r\n    mounted: function(){\r\n      let self = this;\r\n      sessionStorage.clear();\r\n      socket.on('connexion_success', function(data){\r\n          if (sessionStorage.getItem(\"autosave\")) {\r\n            // Restauration du contenu de session\r\n            sessionStorage.clear();\r\n          }\r\n          sessionStorage.setItem(\"autosave\", self.pseudo);\r\n          self.errPseudo = false\r\n          console.log(data)\r\n          this.pseudo = '';\r\n          this.password = '';\r\n          document.location.href= '/room'\r\n        })\r\n      socket.on('connexion_failed', function(data){\r\n          self.errPseudo = true\r\n      })\r\n    },\r\n}\r\n\r\n\r\n",{"version":3,"sources":["home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"home.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div id=\"content\">\r\n  <v-app id=\"inspire\">\r\n    <v-content>\r\n      <v-container\r\n        fluid\r\n        fill-height\r\n      >\r\n        <v-layout\r\n          align-center\r\n          justify-center\r\n        >\r\n          <v-flex\r\n            xs12\r\n            sm8\r\n            md4\r\n          >\r\n            <v-card class=\"elevation-12\">\r\n              <v-toolbar\r\n                color=\"#575453\"\r\n                dark\r\n                flat\r\n              >\r\n                <v-toolbar-title>MaxienBomFlo</v-toolbar-title>\r\n                <v-spacer></v-spacer>\r\n              </v-toolbar>\r\n              <v-card-text>\r\n                <v-form>\r\n                  <v-text-field\r\n                    label=\"Login\"\r\n                    name=\"login\"\r\n                    type=\"text\"\r\n                    v-model=\"pseudo\"\r\n                  ></v-text-field>\r\n\r\n                  <v-text-field\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    v-model=\"password\"\r\n                  ></v-text-field>\r\n                  <v-btn v-on:click=\"session(pseudo, password)\" color=\"#575453\">Connexion</v-btn>\r\n                  <p v-if ='errPseudo' style=\"color:red;\">Les identifiants entr√©s sont incorrects</p>\r\n                </v-form>\r\n              </v-card-text>\r\n              <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                \r\n              </v-card-actions>\r\n            </v-card>\r\n          </v-flex>\r\n        </v-layout>\r\n      </v-container>\r\n    </v-content>\r\n  </v-app>\r\n</div>\r\n</template>\r\n<script>\r\nimport io from 'socket.io-client';\r\nvar socket = io('127.0.0.1:3535');\r\nexport default {\r\n  name: 'home',\r\n\r\n    data : () => ({\r\n      pseudo: '',\r\n      password :'',\r\n      errPseudo : false,\r\n      log : []\r\n    }),\r\n\r\n    methods :{\r\n      //Connexion de l'utilisateur\r\n      //Envoyer juste le pseudo au serveur et stocker dans une variable de session\r\n      session : function(pseudo, password){\r\n        if (pseudo != '' && password != ''){\r\n          this.errPseudo = false;\r\n          this.pseudo = pseudo;\r\n          this.password = password;\r\n          // Enregistrement de la saisie utilisateur dans le stockage de session\r\n          this.log.push(pseudo);\r\n          this.log.push(password);\r\n          socket.emit('connexion', this.log);\r\n          this.log = [];\r\n        }\r\n        else {\r\n          this.errPseudo = true;\r\n        }\r\n      }\r\n    },\r\n\r\n    \r\n    props: {\r\n      msg: String,\r\n    },\r\n\r\n    mounted: function(){\r\n      let self = this;\r\n      sessionStorage.clear();\r\n      socket.on('connexion_success', function(data){\r\n          if (sessionStorage.getItem(\"autosave\")) {\r\n            // Restauration du contenu de session\r\n            sessionStorage.clear();\r\n          }\r\n          sessionStorage.setItem(\"autosave\", self.pseudo);\r\n          self.errPseudo = false\r\n          console.log(data)\r\n          this.pseudo = '';\r\n          this.password = '';\r\n          document.location.href= '/room'\r\n        })\r\n      socket.on('connexion_failed', function(data){\r\n          self.errPseudo = true\r\n      })\r\n    },\r\n}\r\n\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>"]}]}
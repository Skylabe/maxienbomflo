{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VSwitch\\VSwitch.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VSwitch\\VSwitch.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/styles/components/_selection-controls.sass\";\nimport \"../../../src/components/VSwitch/VSwitch.sass\"; // Mixins\n\nimport Selectable from '../../mixins/selectable';\nimport VInput from '../VInput'; // Directives\n\nimport Touch from '../../directives/touch'; // Components\n\nimport { VFabTransition } from '../transitions';\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'; // Helpers\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-switch',\n  directives: {\n    Touch\n  },\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    flat: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classes() {\n      return { ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset\n      };\n    },\n\n    attrs() {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.disabled),\n        role: 'switch'\n      };\n    },\n\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState() {\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    },\n\n    switchData() {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses\n      });\n    }\n\n  },\n  methods: {\n    genDefaultSlot() {\n      return [this.genSwitch(), this.genLabel()];\n    },\n\n    genSwitch() {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput('checkbox', { ...this.attrs,\n        ...this.attrs$\n      }), this.genRipple(this.setTextColor(this.validationState, {\n        directives: [{\n          name: 'touch',\n          value: {\n            left: this.onSwipeLeft,\n            right: this.onSwipeRight\n          }\n        }]\n      })), this.$createElement('div', {\n        staticClass: 'v-input--switch__track',\n        ...this.switchData\n      }), this.$createElement('div', {\n        staticClass: 'v-input--switch__thumb',\n        ...this.switchData\n      }, [this.genProgress()])]);\n    },\n\n    genProgress() {\n      return this.$createElement(VFabTransition, {}, [this.loading === false ? null : this.$slots.progress || this.$createElement(VProgressCircular, {\n        props: {\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          size: 16,\n          width: 2,\n          indeterminate: true\n        }\n      })]);\n    },\n\n    onSwipeLeft() {\n      if (this.isActive) this.onChange();\n    },\n\n    onSwipeRight() {\n      if (!this.isActive) this.onChange();\n    },\n\n    onKeydown(e) {\n      if (e.keyCode === keyCodes.left && this.isActive || e.keyCode === keyCodes.right && !this.isActive) this.onChange();\n    }\n\n  }\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VSwitch\\VSwitch.js"],"names":["Selectable","VInput","Touch","VFabTransition","VProgressCircular","keyCodes","extend","name","directives","props","inset","Boolean","loading","type","String","default","flat","computed","classes","options","call","attrs","isActive","disabled","role","validationState","hasError","shouldValidate","hasSuccess","hasColor","computedColor","undefined","switchData","setTextColor","class","themeClasses","methods","genDefaultSlot","genSwitch","genLabel","$createElement","staticClass","genInput","attrs$","genRipple","value","left","onSwipeLeft","right","onSwipeRight","genProgress","$slots","progress","color","size","width","indeterminate","onChange","onKeydown","e","keyCode"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/styles/components/_selection-controls.sass\";\nimport \"../../../src/components/VSwitch/VSwitch.sass\"; // Mixins\n\nimport Selectable from '../../mixins/selectable';\nimport VInput from '../VInput'; // Directives\n\nimport Touch from '../../directives/touch'; // Components\n\nimport { VFabTransition } from '../transitions';\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'; // Helpers\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-switch',\n  directives: {\n    Touch\n  },\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    flat: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classes() {\n      return { ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset\n      };\n    },\n\n    attrs() {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.disabled),\n        role: 'switch'\n      };\n    },\n\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState() {\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    },\n\n    switchData() {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses\n      });\n    }\n\n  },\n  methods: {\n    genDefaultSlot() {\n      return [this.genSwitch(), this.genLabel()];\n    },\n\n    genSwitch() {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput('checkbox', { ...this.attrs,\n        ...this.attrs$\n      }), this.genRipple(this.setTextColor(this.validationState, {\n        directives: [{\n          name: 'touch',\n          value: {\n            left: this.onSwipeLeft,\n            right: this.onSwipeRight\n          }\n        }]\n      })), this.$createElement('div', {\n        staticClass: 'v-input--switch__track',\n        ...this.switchData\n      }), this.$createElement('div', {\n        staticClass: 'v-input--switch__thumb',\n        ...this.switchData\n      }, [this.genProgress()])]);\n    },\n\n    genProgress() {\n      return this.$createElement(VFabTransition, {}, [this.loading === false ? null : this.$slots.progress || this.$createElement(VProgressCircular, {\n        props: {\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          size: 16,\n          width: 2,\n          indeterminate: true\n        }\n      })]);\n    },\n\n    onSwipeLeft() {\n      if (this.isActive) this.onChange();\n    },\n\n    onSwipeRight() {\n      if (!this.isActive) this.onChange();\n    },\n\n    onKeydown(e) {\n      if (e.keyCode === keyCodes.left && this.isActive || e.keyCode === keyCodes.right && !this.isActive) this.onChange();\n    }\n\n  }\n});\n//# sourceMappingURL=VSwitch.js.map"]}]}
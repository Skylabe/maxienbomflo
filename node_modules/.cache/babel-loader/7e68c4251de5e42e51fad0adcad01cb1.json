{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VTabs\\VTabsBar.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VTabs\\VTabsBar.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nimport SSRBootable from '../../mixins/ssr-bootable'; // Utilities\n\nimport mixins from '../../util/mixins';\nexport default mixins(BaseSlideGroup, SSRBootable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide() {\n    return {\n      tabsBar: this\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses\n      };\n    }\n\n  },\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange'\n  },\n  methods: {\n    callSlider() {\n      if (!this.isBooted) return;\n      this.$emit('call:slider');\n    },\n\n    genContent() {\n      const render = BaseSlideGroup.options.methods.genContent.call(this);\n      render.data = render.data || {};\n      render.data.staticClass += ' v-tabs-bar__content';\n      return render;\n    },\n\n    onRouteChange(val, oldVal) {\n      /* istanbul ignore next */\n      if (this.mandatory) return;\n      const items = this.items;\n      const newPath = val.path;\n      const oldPath = oldVal.path;\n      let hasNew = false;\n      let hasOld = false;\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true;else if (item.to === oldPath) hasOld = true;\n        if (hasNew && hasOld) break;\n      } // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n\n\n      if (!hasNew && hasOld) this.internalValue = undefined;\n    }\n\n  },\n\n  render(h) {\n    const render = BaseSlideGroup.options.render.call(this, h);\n    render.data.attrs = {\n      role: 'tablist'\n    };\n    return render;\n  }\n\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VTabs\\VTabsBar.js"],"names":["BaseSlideGroup","Themeable","SSRBootable","mixins","extend","name","provide","tabsBar","computed","classes","options","call","isMobile","showArrows","themeClasses","watch","items","internalValue","$route","methods","callSlider","isBooted","$emit","genContent","render","data","staticClass","onRouteChange","val","oldVal","mandatory","newPath","path","oldPath","hasNew","hasOld","item","to","undefined","h","attrs","role"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,4BAA/B,C,CAA6D;;AAE7D,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAAqD;;AAErD,OAAOC,MAAP,MAAmB,mBAAnB;AACA,eAAeA,MAAM,CAACH,cAAD,EAAiBE,WAAjB,EAA8BD;AACnD;AADqB,CAAN,CAEbG,MAFa,CAEN;AACPC,EAAAA,IAAI,EAAE,YADC;;AAGPC,EAAAA,OAAO,GAAG;AACR,WAAO;AACLC,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD,GAPM;;AASPC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,GAAG;AACR,aAAO,EAAE,GAAGT,cAAc,CAACU,OAAf,CAAuBF,QAAvB,CAAgCC,OAAhC,CAAwCE,IAAxC,CAA6C,IAA7C,CAAL;AACL,sBAAc,IADT;AAEL,iCAAyB,KAAKC,QAFzB;AAGL;AACA,mCAA2B,KAAKC,UAJ3B;AAKL,WAAG,KAAKC;AALH,OAAP;AAOD;;AATO,GATH;AAqBPC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,YADF;AAELC,IAAAA,aAAa,EAAE,YAFV;AAGLC,IAAAA,MAAM,EAAE;AAHH,GArBA;AA0BPC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,GAAG;AACX,UAAI,CAAC,KAAKC,QAAV,EAAoB;AACpB,WAAKC,KAAL,CAAW,aAAX;AACD,KAJM;;AAMPC,IAAAA,UAAU,GAAG;AACX,YAAMC,MAAM,GAAGxB,cAAc,CAACU,OAAf,CAAuBS,OAAvB,CAA+BI,UAA/B,CAA0CZ,IAA1C,CAA+C,IAA/C,CAAf;AACAa,MAAAA,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACC,IAAP,IAAe,EAA7B;AACAD,MAAAA,MAAM,CAACC,IAAP,CAAYC,WAAZ,IAA2B,sBAA3B;AACA,aAAOF,MAAP;AACD,KAXM;;AAaPG,IAAAA,aAAa,CAACC,GAAD,EAAMC,MAAN,EAAc;AACzB;AACA,UAAI,KAAKC,SAAT,EAAoB;AACpB,YAAMd,KAAK,GAAG,KAAKA,KAAnB;AACA,YAAMe,OAAO,GAAGH,GAAG,CAACI,IAApB;AACA,YAAMC,OAAO,GAAGJ,MAAM,CAACG,IAAvB;AACA,UAAIE,MAAM,GAAG,KAAb;AACA,UAAIC,MAAM,GAAG,KAAb;;AAEA,WAAK,MAAMC,IAAX,IAAmBpB,KAAnB,EAA0B;AACxB,YAAIoB,IAAI,CAACC,EAAL,KAAYN,OAAhB,EAAyBG,MAAM,GAAG,IAAT,CAAzB,KAA4C,IAAIE,IAAI,CAACC,EAAL,KAAYJ,OAAhB,EAAyBE,MAAM,GAAG,IAAT;AACrE,YAAID,MAAM,IAAIC,MAAd,EAAsB;AACvB,OAZwB,CAYvB;AACF;AACA;;;AAGA,UAAI,CAACD,MAAD,IAAWC,MAAf,EAAuB,KAAKlB,aAAL,GAAqBqB,SAArB;AACxB;;AA/BM,GA1BF;;AA6DPd,EAAAA,MAAM,CAACe,CAAD,EAAI;AACR,UAAMf,MAAM,GAAGxB,cAAc,CAACU,OAAf,CAAuBc,MAAvB,CAA8Bb,IAA9B,CAAmC,IAAnC,EAAyC4B,CAAzC,CAAf;AACAf,IAAAA,MAAM,CAACC,IAAP,CAAYe,KAAZ,GAAoB;AAClBC,MAAAA,IAAI,EAAE;AADY,KAApB;AAGA,WAAOjB,MAAP;AACD;;AAnEM,CAFM,CAAf","sourcesContent":["// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nimport SSRBootable from '../../mixins/ssr-bootable'; // Utilities\n\nimport mixins from '../../util/mixins';\nexport default mixins(BaseSlideGroup, SSRBootable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide() {\n    return {\n      tabsBar: this\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses\n      };\n    }\n\n  },\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange'\n  },\n  methods: {\n    callSlider() {\n      if (!this.isBooted) return;\n      this.$emit('call:slider');\n    },\n\n    genContent() {\n      const render = BaseSlideGroup.options.methods.genContent.call(this);\n      render.data = render.data || {};\n      render.data.staticClass += ' v-tabs-bar__content';\n      return render;\n    },\n\n    onRouteChange(val, oldVal) {\n      /* istanbul ignore next */\n      if (this.mandatory) return;\n      const items = this.items;\n      const newPath = val.path;\n      const oldPath = oldVal.path;\n      let hasNew = false;\n      let hasOld = false;\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true;else if (item.to === oldPath) hasOld = true;\n        if (hasNew && hasOld) break;\n      } // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n\n\n      if (!hasNew && hasOld) this.internalValue = undefined;\n    }\n\n  },\n\n  render(h) {\n    const render = BaseSlideGroup.options.render.call(this, h);\n    render.data.attrs = {\n      role: 'tablist'\n    };\n    return render;\n  }\n\n});\n//# sourceMappingURL=VTabsBar.js.map"]}]}
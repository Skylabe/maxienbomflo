{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VData\\VData.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VData\\VData.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Helpers\nimport { wrapInArray, sortItems, deepEqual, groupByProperty, searchItems } from '../../util/helpers';\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'v-data',\n  inheritAttrs: false,\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    sortBy: {\n      type: [String, Array],\n      default: () => []\n    },\n    sortDesc: {\n      type: [Boolean, Array],\n      default: () => []\n    },\n    customSort: {\n      type: Function,\n      default: sortItems\n    },\n    mustSort: Boolean,\n    multiSort: Boolean,\n    page: {\n      type: Number,\n      default: 1\n    },\n    itemsPerPage: {\n      type: Number,\n      default: 10\n    },\n    groupBy: {\n      type: [String, Array],\n      default: () => []\n    },\n    groupDesc: {\n      type: [Boolean, Array],\n      default: () => []\n    },\n    locale: {\n      type: String,\n      default: 'en-US'\n    },\n    disableSort: Boolean,\n    disablePagination: Boolean,\n    disableFiltering: Boolean,\n    search: String,\n    customFilter: {\n      type: Function,\n      default: searchItems\n    },\n    serverItemsLength: {\n      type: Number,\n      default: -1\n    }\n  },\n\n  data() {\n    let internalOptions = {\n      page: this.page,\n      itemsPerPage: this.itemsPerPage,\n      sortBy: wrapInArray(this.sortBy),\n      sortDesc: wrapInArray(this.sortDesc),\n      groupBy: wrapInArray(this.groupBy),\n      groupDesc: wrapInArray(this.groupDesc),\n      mustSort: this.mustSort,\n      multiSort: this.multiSort\n    };\n\n    if (this.options) {\n      internalOptions = Object.assign(internalOptions, this.options);\n    }\n\n    return {\n      internalOptions\n    };\n  },\n\n  computed: {\n    itemsLength() {\n      return this.serverItemsLength >= 0 ? this.serverItemsLength : this.filteredItems.length;\n    },\n\n    pageCount() {\n      return this.internalOptions.itemsPerPage === -1 ? 1 : Math.ceil(this.itemsLength / this.internalOptions.itemsPerPage); // TODO: can't use items.length here\n    },\n\n    pageStart() {\n      if (this.internalOptions.itemsPerPage === -1 || !this.items.length) return 0;\n      return (this.internalOptions.page - 1) * this.internalOptions.itemsPerPage;\n    },\n\n    pageStop() {\n      if (this.internalOptions.itemsPerPage === -1) return this.itemsLength;\n      if (!this.items.length) return 0;\n      return Math.min(this.itemsLength, this.internalOptions.page * this.internalOptions.itemsPerPage);\n    },\n\n    isGrouped() {\n      return !!this.internalOptions.groupBy.length;\n    },\n\n    pagination() {\n      return {\n        page: this.internalOptions.page,\n        itemsPerPage: this.internalOptions.itemsPerPage,\n        pageStart: this.pageStart,\n        pageStop: this.pageStop,\n        pageCount: this.pageCount,\n        itemsLength: this.itemsLength\n      };\n    },\n\n    filteredItems() {\n      let items = this.items.slice();\n\n      if (!this.disableFiltering && this.serverItemsLength <= 0) {\n        items = this.customFilter(items, this.search);\n      }\n\n      return items;\n    },\n\n    computedItems() {\n      let items = this.filteredItems.slice();\n\n      if (!this.disableSort && this.serverItemsLength <= 0) {\n        items = this.sortItems(items);\n      }\n\n      if (!this.disablePagination && this.serverItemsLength <= 0) {\n        items = this.paginateItems(items);\n      }\n\n      return items;\n    },\n\n    groupedItems() {\n      return this.isGrouped ? groupByProperty(this.computedItems, this.internalOptions.groupBy[0]) : null;\n    },\n\n    scopedProps() {\n      const props = {\n        sort: this.sort,\n        sortArray: this.sortArray,\n        group: this.group,\n        items: this.computedItems,\n        options: this.internalOptions,\n        updateOptions: this.updateOptions,\n        pagination: this.pagination,\n        groupedItems: this.groupedItems,\n        originalItemsLength: this.items.length\n      };\n      return props;\n    },\n\n    computedOptions() {\n      return { ...this.options\n      };\n    }\n\n  },\n  watch: {\n    computedOptions: {\n      handler(options, old) {\n        if (deepEqual(options, old)) return;\n        this.updateOptions(options);\n      },\n\n      deep: true,\n      immediate: true\n    },\n    internalOptions: {\n      handler(options, old) {\n        if (deepEqual(options, old)) return;\n        this.$emit('update:options', options);\n        this.$emit('pagination', this.pagination);\n      },\n\n      deep: true,\n      immediate: true\n    },\n\n    page(page) {\n      this.updateOptions({\n        page\n      });\n    },\n\n    'internalOptions.page'(page) {\n      this.$emit('update:page', page);\n    },\n\n    itemsPerPage(itemsPerPage) {\n      this.updateOptions({\n        itemsPerPage\n      });\n    },\n\n    'internalOptions.itemsPerPage': {\n      handler(itemsPerPage) {\n        this.$emit('update:items-per-page', itemsPerPage);\n      },\n\n      immediate: true\n    },\n\n    sortBy(sortBy) {\n      this.updateOptions({\n        sortBy: wrapInArray(sortBy)\n      });\n    },\n\n    'internalOptions.sortBy'(sortBy, old) {\n      !deepEqual(sortBy, old) && this.$emit('update:sort-by', Array.isArray(this.sortBy) ? sortBy : sortBy[0]);\n    },\n\n    sortDesc(sortDesc) {\n      this.updateOptions({\n        sortDesc: wrapInArray(sortDesc)\n      });\n    },\n\n    'internalOptions.sortDesc'(sortDesc, old) {\n      !deepEqual(sortDesc, old) && this.$emit('update:sort-desc', Array.isArray(this.sortDesc) ? sortDesc : sortDesc[0]);\n    },\n\n    groupBy(groupBy) {\n      this.updateOptions({\n        groupBy: wrapInArray(groupBy)\n      });\n    },\n\n    'internalOptions.groupBy'(groupBy, old) {\n      !deepEqual(groupBy, old) && this.$emit('update:group-by', Array.isArray(this.groupBy) ? groupBy : groupBy[0]);\n    },\n\n    groupDesc(groupDesc) {\n      this.updateOptions({\n        groupDesc: wrapInArray(groupDesc)\n      });\n    },\n\n    'internalOptions.groupDesc'(groupDesc, old) {\n      !deepEqual(groupDesc, old) && this.$emit('update:group-desc', Array.isArray(this.groupDesc) ? groupDesc : groupDesc[0]);\n    },\n\n    multiSort(multiSort) {\n      this.updateOptions({\n        multiSort\n      });\n    },\n\n    'internalOptions.multiSort'(multiSort) {\n      this.$emit('update:multi-sort', multiSort);\n    },\n\n    mustSort(mustSort) {\n      this.updateOptions({\n        mustSort\n      });\n    },\n\n    'internalOptions.mustSort'(mustSort) {\n      this.$emit('update:must-sort', mustSort);\n    },\n\n    pageCount: {\n      handler(pageCount) {\n        this.$emit('page-count', pageCount);\n      },\n\n      immediate: true\n    },\n    computedItems: {\n      handler(computedItems) {\n        this.$emit('current-items', computedItems);\n      },\n\n      immediate: true\n    }\n  },\n  methods: {\n    toggle(key, oldBy, oldDesc, page, mustSort, multiSort) {\n      let by = oldBy.slice();\n      let desc = oldDesc.slice();\n      const byIndex = by.findIndex(k => k === key);\n\n      if (byIndex < 0) {\n        if (!multiSort) {\n          by = [];\n          desc = [];\n        }\n\n        by.push(key);\n        desc.push(false);\n      } else if (byIndex >= 0 && !desc[byIndex]) {\n        desc[byIndex] = true;\n      } else if (!mustSort) {\n        by.splice(byIndex, 1);\n        desc.splice(byIndex, 1);\n      } else {\n        desc[byIndex] = false;\n      } // Reset page to 1 if sortBy or sortDesc have changed\n\n\n      if (!deepEqual(by, oldBy) || !deepEqual(desc, oldDesc)) {\n        page = 1;\n      }\n\n      return {\n        by,\n        desc,\n        page\n      };\n    },\n\n    group(key) {\n      const {\n        by: groupBy,\n        desc: groupDesc,\n        page\n      } = this.toggle(key, this.internalOptions.groupBy, this.internalOptions.groupDesc, this.internalOptions.page, true, false);\n      this.updateOptions({\n        groupBy,\n        groupDesc,\n        page\n      });\n    },\n\n    sort(key) {\n      if (Array.isArray(key)) return this.sortArray(key);\n      const {\n        by: sortBy,\n        desc: sortDesc,\n        page\n      } = this.toggle(key, this.internalOptions.sortBy, this.internalOptions.sortDesc, this.internalOptions.page, this.mustSort, this.multiSort);\n      this.updateOptions({\n        sortBy,\n        sortDesc,\n        page\n      });\n    },\n\n    sortArray(sortBy) {\n      const sortDesc = sortBy.map(s => {\n        const i = this.internalOptions.sortBy.findIndex(k => k === s);\n        return i > -1 ? this.internalOptions.sortDesc[i] : false;\n      });\n      this.updateOptions({\n        sortBy,\n        sortDesc\n      });\n    },\n\n    updateOptions(options) {\n      this.internalOptions = { ...this.internalOptions,\n        ...options,\n        page: this.serverItemsLength < 0 ? Math.max(1, Math.min(options.page || this.internalOptions.page, this.pageCount)) : options.page || this.internalOptions.page\n      };\n    },\n\n    sortItems(items) {\n      const sortBy = this.internalOptions.groupBy.concat(this.internalOptions.sortBy);\n      const sortDesc = this.internalOptions.groupDesc.concat(this.internalOptions.sortDesc);\n      return this.customSort(items, sortBy, sortDesc, this.locale);\n    },\n\n    paginateItems(items) {\n      // Make sure we don't try to display non-existant page if items suddenly change\n      // TODO: Could possibly move this to pageStart/pageStop?\n      if (items.length < this.pageStart) this.internalOptions.page = 1;\n      return items.slice(this.pageStart, this.pageStop);\n    }\n\n  },\n\n  render() {\n    return this.$scopedSlots.default && this.$scopedSlots.default(this.scopedProps);\n  }\n\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VData\\VData.js"],"names":["wrapInArray","sortItems","deepEqual","groupByProperty","searchItems","Vue","extend","name","inheritAttrs","props","items","type","Array","default","options","Object","sortBy","String","sortDesc","Boolean","customSort","Function","mustSort","multiSort","page","Number","itemsPerPage","groupBy","groupDesc","locale","disableSort","disablePagination","disableFiltering","search","customFilter","serverItemsLength","data","internalOptions","assign","computed","itemsLength","filteredItems","length","pageCount","Math","ceil","pageStart","pageStop","min","isGrouped","pagination","slice","computedItems","paginateItems","groupedItems","scopedProps","sort","sortArray","group","updateOptions","originalItemsLength","computedOptions","watch","handler","old","deep","immediate","$emit","isArray","methods","toggle","key","oldBy","oldDesc","by","desc","byIndex","findIndex","k","push","splice","map","s","i","max","concat","render","$scopedSlots"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,SAAjC,EAA4CC,eAA5C,EAA6DC,WAA7D,QAAgF,oBAAhF;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,eAAeA,GAAG,CAACC,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAE,QADkB;AAExBC,EAAAA,YAAY,EAAE,KAFU;AAGxBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEC,KADD;AAELC,MAAAA,OAAO,EAAE,MAAM;AAFV,KADF;AAKLC,IAAAA,OAAO,EAAE;AACPH,MAAAA,IAAI,EAAEI,MADC;AAEPF,MAAAA,OAAO,EAAE,OAAO,EAAP;AAFF,KALJ;AASLG,IAAAA,MAAM,EAAE;AACNL,MAAAA,IAAI,EAAE,CAACM,MAAD,EAASL,KAAT,CADA;AAENC,MAAAA,OAAO,EAAE,MAAM;AAFT,KATH;AAaLK,IAAAA,QAAQ,EAAE;AACRP,MAAAA,IAAI,EAAE,CAACQ,OAAD,EAAUP,KAAV,CADE;AAERC,MAAAA,OAAO,EAAE,MAAM;AAFP,KAbL;AAiBLO,IAAAA,UAAU,EAAE;AACVT,MAAAA,IAAI,EAAEU,QADI;AAEVR,MAAAA,OAAO,EAAEZ;AAFC,KAjBP;AAqBLqB,IAAAA,QAAQ,EAAEH,OArBL;AAsBLI,IAAAA,SAAS,EAAEJ,OAtBN;AAuBLK,IAAAA,IAAI,EAAE;AACJb,MAAAA,IAAI,EAAEc,MADF;AAEJZ,MAAAA,OAAO,EAAE;AAFL,KAvBD;AA2BLa,IAAAA,YAAY,EAAE;AACZf,MAAAA,IAAI,EAAEc,MADM;AAEZZ,MAAAA,OAAO,EAAE;AAFG,KA3BT;AA+BLc,IAAAA,OAAO,EAAE;AACPhB,MAAAA,IAAI,EAAE,CAACM,MAAD,EAASL,KAAT,CADC;AAEPC,MAAAA,OAAO,EAAE,MAAM;AAFR,KA/BJ;AAmCLe,IAAAA,SAAS,EAAE;AACTjB,MAAAA,IAAI,EAAE,CAACQ,OAAD,EAAUP,KAAV,CADG;AAETC,MAAAA,OAAO,EAAE,MAAM;AAFN,KAnCN;AAuCLgB,IAAAA,MAAM,EAAE;AACNlB,MAAAA,IAAI,EAAEM,MADA;AAENJ,MAAAA,OAAO,EAAE;AAFH,KAvCH;AA2CLiB,IAAAA,WAAW,EAAEX,OA3CR;AA4CLY,IAAAA,iBAAiB,EAAEZ,OA5Cd;AA6CLa,IAAAA,gBAAgB,EAAEb,OA7Cb;AA8CLc,IAAAA,MAAM,EAAEhB,MA9CH;AA+CLiB,IAAAA,YAAY,EAAE;AACZvB,MAAAA,IAAI,EAAEU,QADM;AAEZR,MAAAA,OAAO,EAAET;AAFG,KA/CT;AAmDL+B,IAAAA,iBAAiB,EAAE;AACjBxB,MAAAA,IAAI,EAAEc,MADW;AAEjBZ,MAAAA,OAAO,EAAE,CAAC;AAFO;AAnDd,GAHiB;;AA4DxBuB,EAAAA,IAAI,GAAG;AACL,QAAIC,eAAe,GAAG;AACpBb,MAAAA,IAAI,EAAE,KAAKA,IADS;AAEpBE,MAAAA,YAAY,EAAE,KAAKA,YAFC;AAGpBV,MAAAA,MAAM,EAAEhB,WAAW,CAAC,KAAKgB,MAAN,CAHC;AAIpBE,MAAAA,QAAQ,EAAElB,WAAW,CAAC,KAAKkB,QAAN,CAJD;AAKpBS,MAAAA,OAAO,EAAE3B,WAAW,CAAC,KAAK2B,OAAN,CALA;AAMpBC,MAAAA,SAAS,EAAE5B,WAAW,CAAC,KAAK4B,SAAN,CANF;AAOpBN,MAAAA,QAAQ,EAAE,KAAKA,QAPK;AAQpBC,MAAAA,SAAS,EAAE,KAAKA;AARI,KAAtB;;AAWA,QAAI,KAAKT,OAAT,EAAkB;AAChBuB,MAAAA,eAAe,GAAGtB,MAAM,CAACuB,MAAP,CAAcD,eAAd,EAA+B,KAAKvB,OAApC,CAAlB;AACD;;AAED,WAAO;AACLuB,MAAAA;AADK,KAAP;AAGD,GA/EuB;;AAiFxBE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,GAAG;AACZ,aAAO,KAAKL,iBAAL,IAA0B,CAA1B,GAA8B,KAAKA,iBAAnC,GAAuD,KAAKM,aAAL,CAAmBC,MAAjF;AACD,KAHO;;AAKRC,IAAAA,SAAS,GAAG;AACV,aAAO,KAAKN,eAAL,CAAqBX,YAArB,KAAsC,CAAC,CAAvC,GAA2C,CAA3C,GAA+CkB,IAAI,CAACC,IAAL,CAAU,KAAKL,WAAL,GAAmB,KAAKH,eAAL,CAAqBX,YAAlD,CAAtD,CADU,CAC6G;AACxH,KAPO;;AASRoB,IAAAA,SAAS,GAAG;AACV,UAAI,KAAKT,eAAL,CAAqBX,YAArB,KAAsC,CAAC,CAAvC,IAA4C,CAAC,KAAKhB,KAAL,CAAWgC,MAA5D,EAAoE,OAAO,CAAP;AACpE,aAAO,CAAC,KAAKL,eAAL,CAAqBb,IAArB,GAA4B,CAA7B,IAAkC,KAAKa,eAAL,CAAqBX,YAA9D;AACD,KAZO;;AAcRqB,IAAAA,QAAQ,GAAG;AACT,UAAI,KAAKV,eAAL,CAAqBX,YAArB,KAAsC,CAAC,CAA3C,EAA8C,OAAO,KAAKc,WAAZ;AAC9C,UAAI,CAAC,KAAK9B,KAAL,CAAWgC,MAAhB,EAAwB,OAAO,CAAP;AACxB,aAAOE,IAAI,CAACI,GAAL,CAAS,KAAKR,WAAd,EAA2B,KAAKH,eAAL,CAAqBb,IAArB,GAA4B,KAAKa,eAAL,CAAqBX,YAA5E,CAAP;AACD,KAlBO;;AAoBRuB,IAAAA,SAAS,GAAG;AACV,aAAO,CAAC,CAAC,KAAKZ,eAAL,CAAqBV,OAArB,CAA6Be,MAAtC;AACD,KAtBO;;AAwBRQ,IAAAA,UAAU,GAAG;AACX,aAAO;AACL1B,QAAAA,IAAI,EAAE,KAAKa,eAAL,CAAqBb,IADtB;AAELE,QAAAA,YAAY,EAAE,KAAKW,eAAL,CAAqBX,YAF9B;AAGLoB,QAAAA,SAAS,EAAE,KAAKA,SAHX;AAILC,QAAAA,QAAQ,EAAE,KAAKA,QAJV;AAKLJ,QAAAA,SAAS,EAAE,KAAKA,SALX;AAMLH,QAAAA,WAAW,EAAE,KAAKA;AANb,OAAP;AAQD,KAjCO;;AAmCRC,IAAAA,aAAa,GAAG;AACd,UAAI/B,KAAK,GAAG,KAAKA,KAAL,CAAWyC,KAAX,EAAZ;;AAEA,UAAI,CAAC,KAAKnB,gBAAN,IAA0B,KAAKG,iBAAL,IAA0B,CAAxD,EAA2D;AACzDzB,QAAAA,KAAK,GAAG,KAAKwB,YAAL,CAAkBxB,KAAlB,EAAyB,KAAKuB,MAA9B,CAAR;AACD;;AAED,aAAOvB,KAAP;AACD,KA3CO;;AA6CR0C,IAAAA,aAAa,GAAG;AACd,UAAI1C,KAAK,GAAG,KAAK+B,aAAL,CAAmBU,KAAnB,EAAZ;;AAEA,UAAI,CAAC,KAAKrB,WAAN,IAAqB,KAAKK,iBAAL,IAA0B,CAAnD,EAAsD;AACpDzB,QAAAA,KAAK,GAAG,KAAKT,SAAL,CAAeS,KAAf,CAAR;AACD;;AAED,UAAI,CAAC,KAAKqB,iBAAN,IAA2B,KAAKI,iBAAL,IAA0B,CAAzD,EAA4D;AAC1DzB,QAAAA,KAAK,GAAG,KAAK2C,aAAL,CAAmB3C,KAAnB,CAAR;AACD;;AAED,aAAOA,KAAP;AACD,KAzDO;;AA2DR4C,IAAAA,YAAY,GAAG;AACb,aAAO,KAAKL,SAAL,GAAiB9C,eAAe,CAAC,KAAKiD,aAAN,EAAqB,KAAKf,eAAL,CAAqBV,OAArB,CAA6B,CAA7B,CAArB,CAAhC,GAAwF,IAA/F;AACD,KA7DO;;AA+DR4B,IAAAA,WAAW,GAAG;AACZ,YAAM9C,KAAK,GAAG;AACZ+C,QAAAA,IAAI,EAAE,KAAKA,IADC;AAEZC,QAAAA,SAAS,EAAE,KAAKA,SAFJ;AAGZC,QAAAA,KAAK,EAAE,KAAKA,KAHA;AAIZhD,QAAAA,KAAK,EAAE,KAAK0C,aAJA;AAKZtC,QAAAA,OAAO,EAAE,KAAKuB,eALF;AAMZsB,QAAAA,aAAa,EAAE,KAAKA,aANR;AAOZT,QAAAA,UAAU,EAAE,KAAKA,UAPL;AAQZI,QAAAA,YAAY,EAAE,KAAKA,YARP;AASZM,QAAAA,mBAAmB,EAAE,KAAKlD,KAAL,CAAWgC;AATpB,OAAd;AAWA,aAAOjC,KAAP;AACD,KA5EO;;AA8ERoD,IAAAA,eAAe,GAAG;AAChB,aAAO,EAAE,GAAG,KAAK/C;AAAV,OAAP;AAED;;AAjFO,GAjFc;AAqKxBgD,EAAAA,KAAK,EAAE;AACLD,IAAAA,eAAe,EAAE;AACfE,MAAAA,OAAO,CAACjD,OAAD,EAAUkD,GAAV,EAAe;AACpB,YAAI9D,SAAS,CAACY,OAAD,EAAUkD,GAAV,CAAb,EAA6B;AAC7B,aAAKL,aAAL,CAAmB7C,OAAnB;AACD,OAJc;;AAMfmD,MAAAA,IAAI,EAAE,IANS;AAOfC,MAAAA,SAAS,EAAE;AAPI,KADZ;AAUL7B,IAAAA,eAAe,EAAE;AACf0B,MAAAA,OAAO,CAACjD,OAAD,EAAUkD,GAAV,EAAe;AACpB,YAAI9D,SAAS,CAACY,OAAD,EAAUkD,GAAV,CAAb,EAA6B;AAC7B,aAAKG,KAAL,CAAW,gBAAX,EAA6BrD,OAA7B;AACA,aAAKqD,KAAL,CAAW,YAAX,EAAyB,KAAKjB,UAA9B;AACD,OALc;;AAOfe,MAAAA,IAAI,EAAE,IAPS;AAQfC,MAAAA,SAAS,EAAE;AARI,KAVZ;;AAqBL1C,IAAAA,IAAI,CAACA,IAAD,EAAO;AACT,WAAKmC,aAAL,CAAmB;AACjBnC,QAAAA;AADiB,OAAnB;AAGD,KAzBI;;AA2BL,2BAAuBA,IAAvB,EAA6B;AAC3B,WAAK2C,KAAL,CAAW,aAAX,EAA0B3C,IAA1B;AACD,KA7BI;;AA+BLE,IAAAA,YAAY,CAACA,YAAD,EAAe;AACzB,WAAKiC,aAAL,CAAmB;AACjBjC,QAAAA;AADiB,OAAnB;AAGD,KAnCI;;AAqCL,oCAAgC;AAC9BqC,MAAAA,OAAO,CAACrC,YAAD,EAAe;AACpB,aAAKyC,KAAL,CAAW,uBAAX,EAAoCzC,YAApC;AACD,OAH6B;;AAK9BwC,MAAAA,SAAS,EAAE;AALmB,KArC3B;;AA6CLlD,IAAAA,MAAM,CAACA,MAAD,EAAS;AACb,WAAK2C,aAAL,CAAmB;AACjB3C,QAAAA,MAAM,EAAEhB,WAAW,CAACgB,MAAD;AADF,OAAnB;AAGD,KAjDI;;AAmDL,6BAAyBA,MAAzB,EAAiCgD,GAAjC,EAAsC;AACpC,OAAC9D,SAAS,CAACc,MAAD,EAASgD,GAAT,CAAV,IAA2B,KAAKG,KAAL,CAAW,gBAAX,EAA6BvD,KAAK,CAACwD,OAAN,CAAc,KAAKpD,MAAnB,IAA6BA,MAA7B,GAAsCA,MAAM,CAAC,CAAD,CAAzE,CAA3B;AACD,KArDI;;AAuDLE,IAAAA,QAAQ,CAACA,QAAD,EAAW;AACjB,WAAKyC,aAAL,CAAmB;AACjBzC,QAAAA,QAAQ,EAAElB,WAAW,CAACkB,QAAD;AADJ,OAAnB;AAGD,KA3DI;;AA6DL,+BAA2BA,QAA3B,EAAqC8C,GAArC,EAA0C;AACxC,OAAC9D,SAAS,CAACgB,QAAD,EAAW8C,GAAX,CAAV,IAA6B,KAAKG,KAAL,CAAW,kBAAX,EAA+BvD,KAAK,CAACwD,OAAN,CAAc,KAAKlD,QAAnB,IAA+BA,QAA/B,GAA0CA,QAAQ,CAAC,CAAD,CAAjF,CAA7B;AACD,KA/DI;;AAiELS,IAAAA,OAAO,CAACA,OAAD,EAAU;AACf,WAAKgC,aAAL,CAAmB;AACjBhC,QAAAA,OAAO,EAAE3B,WAAW,CAAC2B,OAAD;AADH,OAAnB;AAGD,KArEI;;AAuEL,8BAA0BA,OAA1B,EAAmCqC,GAAnC,EAAwC;AACtC,OAAC9D,SAAS,CAACyB,OAAD,EAAUqC,GAAV,CAAV,IAA4B,KAAKG,KAAL,CAAW,iBAAX,EAA8BvD,KAAK,CAACwD,OAAN,CAAc,KAAKzC,OAAnB,IAA8BA,OAA9B,GAAwCA,OAAO,CAAC,CAAD,CAA7E,CAA5B;AACD,KAzEI;;AA2ELC,IAAAA,SAAS,CAACA,SAAD,EAAY;AACnB,WAAK+B,aAAL,CAAmB;AACjB/B,QAAAA,SAAS,EAAE5B,WAAW,CAAC4B,SAAD;AADL,OAAnB;AAGD,KA/EI;;AAiFL,gCAA4BA,SAA5B,EAAuCoC,GAAvC,EAA4C;AAC1C,OAAC9D,SAAS,CAAC0B,SAAD,EAAYoC,GAAZ,CAAV,IAA8B,KAAKG,KAAL,CAAW,mBAAX,EAAgCvD,KAAK,CAACwD,OAAN,CAAc,KAAKxC,SAAnB,IAAgCA,SAAhC,GAA4CA,SAAS,CAAC,CAAD,CAArF,CAA9B;AACD,KAnFI;;AAqFLL,IAAAA,SAAS,CAACA,SAAD,EAAY;AACnB,WAAKoC,aAAL,CAAmB;AACjBpC,QAAAA;AADiB,OAAnB;AAGD,KAzFI;;AA2FL,gCAA4BA,SAA5B,EAAuC;AACrC,WAAK4C,KAAL,CAAW,mBAAX,EAAgC5C,SAAhC;AACD,KA7FI;;AA+FLD,IAAAA,QAAQ,CAACA,QAAD,EAAW;AACjB,WAAKqC,aAAL,CAAmB;AACjBrC,QAAAA;AADiB,OAAnB;AAGD,KAnGI;;AAqGL,+BAA2BA,QAA3B,EAAqC;AACnC,WAAK6C,KAAL,CAAW,kBAAX,EAA+B7C,QAA/B;AACD,KAvGI;;AAyGLqB,IAAAA,SAAS,EAAE;AACToB,MAAAA,OAAO,CAACpB,SAAD,EAAY;AACjB,aAAKwB,KAAL,CAAW,YAAX,EAAyBxB,SAAzB;AACD,OAHQ;;AAKTuB,MAAAA,SAAS,EAAE;AALF,KAzGN;AAgHLd,IAAAA,aAAa,EAAE;AACbW,MAAAA,OAAO,CAACX,aAAD,EAAgB;AACrB,aAAKe,KAAL,CAAW,eAAX,EAA4Bf,aAA5B;AACD,OAHY;;AAKbc,MAAAA,SAAS,EAAE;AALE;AAhHV,GArKiB;AA6RxBG,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,CAACC,GAAD,EAAMC,KAAN,EAAaC,OAAb,EAAsBjD,IAAtB,EAA4BF,QAA5B,EAAsCC,SAAtC,EAAiD;AACrD,UAAImD,EAAE,GAAGF,KAAK,CAACrB,KAAN,EAAT;AACA,UAAIwB,IAAI,GAAGF,OAAO,CAACtB,KAAR,EAAX;AACA,YAAMyB,OAAO,GAAGF,EAAE,CAACG,SAAH,CAAaC,CAAC,IAAIA,CAAC,KAAKP,GAAxB,CAAhB;;AAEA,UAAIK,OAAO,GAAG,CAAd,EAAiB;AACf,YAAI,CAACrD,SAAL,EAAgB;AACdmD,UAAAA,EAAE,GAAG,EAAL;AACAC,UAAAA,IAAI,GAAG,EAAP;AACD;;AAEDD,QAAAA,EAAE,CAACK,IAAH,CAAQR,GAAR;AACAI,QAAAA,IAAI,CAACI,IAAL,CAAU,KAAV;AACD,OARD,MAQO,IAAIH,OAAO,IAAI,CAAX,IAAgB,CAACD,IAAI,CAACC,OAAD,CAAzB,EAAoC;AACzCD,QAAAA,IAAI,CAACC,OAAD,CAAJ,GAAgB,IAAhB;AACD,OAFM,MAEA,IAAI,CAACtD,QAAL,EAAe;AACpBoD,QAAAA,EAAE,CAACM,MAAH,CAAUJ,OAAV,EAAmB,CAAnB;AACAD,QAAAA,IAAI,CAACK,MAAL,CAAYJ,OAAZ,EAAqB,CAArB;AACD,OAHM,MAGA;AACLD,QAAAA,IAAI,CAACC,OAAD,CAAJ,GAAgB,KAAhB;AACD,OApBoD,CAoBnD;;;AAGF,UAAI,CAAC1E,SAAS,CAACwE,EAAD,EAAKF,KAAL,CAAV,IAAyB,CAACtE,SAAS,CAACyE,IAAD,EAAOF,OAAP,CAAvC,EAAwD;AACtDjD,QAAAA,IAAI,GAAG,CAAP;AACD;;AAED,aAAO;AACLkD,QAAAA,EADK;AAELC,QAAAA,IAFK;AAGLnD,QAAAA;AAHK,OAAP;AAKD,KAjCM;;AAmCPkC,IAAAA,KAAK,CAACa,GAAD,EAAM;AACT,YAAM;AACJG,QAAAA,EAAE,EAAE/C,OADA;AAEJgD,QAAAA,IAAI,EAAE/C,SAFF;AAGJJ,QAAAA;AAHI,UAIF,KAAK8C,MAAL,CAAYC,GAAZ,EAAiB,KAAKlC,eAAL,CAAqBV,OAAtC,EAA+C,KAAKU,eAAL,CAAqBT,SAApE,EAA+E,KAAKS,eAAL,CAAqBb,IAApG,EAA0G,IAA1G,EAAgH,KAAhH,CAJJ;AAKA,WAAKmC,aAAL,CAAmB;AACjBhC,QAAAA,OADiB;AAEjBC,QAAAA,SAFiB;AAGjBJ,QAAAA;AAHiB,OAAnB;AAKD,KA9CM;;AAgDPgC,IAAAA,IAAI,CAACe,GAAD,EAAM;AACR,UAAI3D,KAAK,CAACwD,OAAN,CAAcG,GAAd,CAAJ,EAAwB,OAAO,KAAKd,SAAL,CAAec,GAAf,CAAP;AACxB,YAAM;AACJG,QAAAA,EAAE,EAAE1D,MADA;AAEJ2D,QAAAA,IAAI,EAAEzD,QAFF;AAGJM,QAAAA;AAHI,UAIF,KAAK8C,MAAL,CAAYC,GAAZ,EAAiB,KAAKlC,eAAL,CAAqBrB,MAAtC,EAA8C,KAAKqB,eAAL,CAAqBnB,QAAnE,EAA6E,KAAKmB,eAAL,CAAqBb,IAAlG,EAAwG,KAAKF,QAA7G,EAAuH,KAAKC,SAA5H,CAJJ;AAKA,WAAKoC,aAAL,CAAmB;AACjB3C,QAAAA,MADiB;AAEjBE,QAAAA,QAFiB;AAGjBM,QAAAA;AAHiB,OAAnB;AAKD,KA5DM;;AA8DPiC,IAAAA,SAAS,CAACzC,MAAD,EAAS;AAChB,YAAME,QAAQ,GAAGF,MAAM,CAACiE,GAAP,CAAWC,CAAC,IAAI;AAC/B,cAAMC,CAAC,GAAG,KAAK9C,eAAL,CAAqBrB,MAArB,CAA4B6D,SAA5B,CAAsCC,CAAC,IAAIA,CAAC,KAAKI,CAAjD,CAAV;AACA,eAAOC,CAAC,GAAG,CAAC,CAAL,GAAS,KAAK9C,eAAL,CAAqBnB,QAArB,CAA8BiE,CAA9B,CAAT,GAA4C,KAAnD;AACD,OAHgB,CAAjB;AAIA,WAAKxB,aAAL,CAAmB;AACjB3C,QAAAA,MADiB;AAEjBE,QAAAA;AAFiB,OAAnB;AAID,KAvEM;;AAyEPyC,IAAAA,aAAa,CAAC7C,OAAD,EAAU;AACrB,WAAKuB,eAAL,GAAuB,EAAE,GAAG,KAAKA,eAAV;AACrB,WAAGvB,OADkB;AAErBU,QAAAA,IAAI,EAAE,KAAKW,iBAAL,GAAyB,CAAzB,GAA6BS,IAAI,CAACwC,GAAL,CAAS,CAAT,EAAYxC,IAAI,CAACI,GAAL,CAASlC,OAAO,CAACU,IAAR,IAAgB,KAAKa,eAAL,CAAqBb,IAA9C,EAAoD,KAAKmB,SAAzD,CAAZ,CAA7B,GAAgH7B,OAAO,CAACU,IAAR,IAAgB,KAAKa,eAAL,CAAqBb;AAFtI,OAAvB;AAID,KA9EM;;AAgFPvB,IAAAA,SAAS,CAACS,KAAD,EAAQ;AACf,YAAMM,MAAM,GAAG,KAAKqB,eAAL,CAAqBV,OAArB,CAA6B0D,MAA7B,CAAoC,KAAKhD,eAAL,CAAqBrB,MAAzD,CAAf;AACA,YAAME,QAAQ,GAAG,KAAKmB,eAAL,CAAqBT,SAArB,CAA+ByD,MAA/B,CAAsC,KAAKhD,eAAL,CAAqBnB,QAA3D,CAAjB;AACA,aAAO,KAAKE,UAAL,CAAgBV,KAAhB,EAAuBM,MAAvB,EAA+BE,QAA/B,EAAyC,KAAKW,MAA9C,CAAP;AACD,KApFM;;AAsFPwB,IAAAA,aAAa,CAAC3C,KAAD,EAAQ;AACnB;AACA;AACA,UAAIA,KAAK,CAACgC,MAAN,GAAe,KAAKI,SAAxB,EAAmC,KAAKT,eAAL,CAAqBb,IAArB,GAA4B,CAA5B;AACnC,aAAOd,KAAK,CAACyC,KAAN,CAAY,KAAKL,SAAjB,EAA4B,KAAKC,QAAjC,CAAP;AACD;;AA3FM,GA7Re;;AA4XxBuC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKC,YAAL,CAAkB1E,OAAlB,IAA6B,KAAK0E,YAAL,CAAkB1E,OAAlB,CAA0B,KAAK0C,WAA/B,CAApC;AACD;;AA9XuB,CAAX,CAAf","sourcesContent":["// Helpers\nimport { wrapInArray, sortItems, deepEqual, groupByProperty, searchItems } from '../../util/helpers';\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'v-data',\n  inheritAttrs: false,\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    sortBy: {\n      type: [String, Array],\n      default: () => []\n    },\n    sortDesc: {\n      type: [Boolean, Array],\n      default: () => []\n    },\n    customSort: {\n      type: Function,\n      default: sortItems\n    },\n    mustSort: Boolean,\n    multiSort: Boolean,\n    page: {\n      type: Number,\n      default: 1\n    },\n    itemsPerPage: {\n      type: Number,\n      default: 10\n    },\n    groupBy: {\n      type: [String, Array],\n      default: () => []\n    },\n    groupDesc: {\n      type: [Boolean, Array],\n      default: () => []\n    },\n    locale: {\n      type: String,\n      default: 'en-US'\n    },\n    disableSort: Boolean,\n    disablePagination: Boolean,\n    disableFiltering: Boolean,\n    search: String,\n    customFilter: {\n      type: Function,\n      default: searchItems\n    },\n    serverItemsLength: {\n      type: Number,\n      default: -1\n    }\n  },\n\n  data() {\n    let internalOptions = {\n      page: this.page,\n      itemsPerPage: this.itemsPerPage,\n      sortBy: wrapInArray(this.sortBy),\n      sortDesc: wrapInArray(this.sortDesc),\n      groupBy: wrapInArray(this.groupBy),\n      groupDesc: wrapInArray(this.groupDesc),\n      mustSort: this.mustSort,\n      multiSort: this.multiSort\n    };\n\n    if (this.options) {\n      internalOptions = Object.assign(internalOptions, this.options);\n    }\n\n    return {\n      internalOptions\n    };\n  },\n\n  computed: {\n    itemsLength() {\n      return this.serverItemsLength >= 0 ? this.serverItemsLength : this.filteredItems.length;\n    },\n\n    pageCount() {\n      return this.internalOptions.itemsPerPage === -1 ? 1 : Math.ceil(this.itemsLength / this.internalOptions.itemsPerPage); // TODO: can't use items.length here\n    },\n\n    pageStart() {\n      if (this.internalOptions.itemsPerPage === -1 || !this.items.length) return 0;\n      return (this.internalOptions.page - 1) * this.internalOptions.itemsPerPage;\n    },\n\n    pageStop() {\n      if (this.internalOptions.itemsPerPage === -1) return this.itemsLength;\n      if (!this.items.length) return 0;\n      return Math.min(this.itemsLength, this.internalOptions.page * this.internalOptions.itemsPerPage);\n    },\n\n    isGrouped() {\n      return !!this.internalOptions.groupBy.length;\n    },\n\n    pagination() {\n      return {\n        page: this.internalOptions.page,\n        itemsPerPage: this.internalOptions.itemsPerPage,\n        pageStart: this.pageStart,\n        pageStop: this.pageStop,\n        pageCount: this.pageCount,\n        itemsLength: this.itemsLength\n      };\n    },\n\n    filteredItems() {\n      let items = this.items.slice();\n\n      if (!this.disableFiltering && this.serverItemsLength <= 0) {\n        items = this.customFilter(items, this.search);\n      }\n\n      return items;\n    },\n\n    computedItems() {\n      let items = this.filteredItems.slice();\n\n      if (!this.disableSort && this.serverItemsLength <= 0) {\n        items = this.sortItems(items);\n      }\n\n      if (!this.disablePagination && this.serverItemsLength <= 0) {\n        items = this.paginateItems(items);\n      }\n\n      return items;\n    },\n\n    groupedItems() {\n      return this.isGrouped ? groupByProperty(this.computedItems, this.internalOptions.groupBy[0]) : null;\n    },\n\n    scopedProps() {\n      const props = {\n        sort: this.sort,\n        sortArray: this.sortArray,\n        group: this.group,\n        items: this.computedItems,\n        options: this.internalOptions,\n        updateOptions: this.updateOptions,\n        pagination: this.pagination,\n        groupedItems: this.groupedItems,\n        originalItemsLength: this.items.length\n      };\n      return props;\n    },\n\n    computedOptions() {\n      return { ...this.options\n      };\n    }\n\n  },\n  watch: {\n    computedOptions: {\n      handler(options, old) {\n        if (deepEqual(options, old)) return;\n        this.updateOptions(options);\n      },\n\n      deep: true,\n      immediate: true\n    },\n    internalOptions: {\n      handler(options, old) {\n        if (deepEqual(options, old)) return;\n        this.$emit('update:options', options);\n        this.$emit('pagination', this.pagination);\n      },\n\n      deep: true,\n      immediate: true\n    },\n\n    page(page) {\n      this.updateOptions({\n        page\n      });\n    },\n\n    'internalOptions.page'(page) {\n      this.$emit('update:page', page);\n    },\n\n    itemsPerPage(itemsPerPage) {\n      this.updateOptions({\n        itemsPerPage\n      });\n    },\n\n    'internalOptions.itemsPerPage': {\n      handler(itemsPerPage) {\n        this.$emit('update:items-per-page', itemsPerPage);\n      },\n\n      immediate: true\n    },\n\n    sortBy(sortBy) {\n      this.updateOptions({\n        sortBy: wrapInArray(sortBy)\n      });\n    },\n\n    'internalOptions.sortBy'(sortBy, old) {\n      !deepEqual(sortBy, old) && this.$emit('update:sort-by', Array.isArray(this.sortBy) ? sortBy : sortBy[0]);\n    },\n\n    sortDesc(sortDesc) {\n      this.updateOptions({\n        sortDesc: wrapInArray(sortDesc)\n      });\n    },\n\n    'internalOptions.sortDesc'(sortDesc, old) {\n      !deepEqual(sortDesc, old) && this.$emit('update:sort-desc', Array.isArray(this.sortDesc) ? sortDesc : sortDesc[0]);\n    },\n\n    groupBy(groupBy) {\n      this.updateOptions({\n        groupBy: wrapInArray(groupBy)\n      });\n    },\n\n    'internalOptions.groupBy'(groupBy, old) {\n      !deepEqual(groupBy, old) && this.$emit('update:group-by', Array.isArray(this.groupBy) ? groupBy : groupBy[0]);\n    },\n\n    groupDesc(groupDesc) {\n      this.updateOptions({\n        groupDesc: wrapInArray(groupDesc)\n      });\n    },\n\n    'internalOptions.groupDesc'(groupDesc, old) {\n      !deepEqual(groupDesc, old) && this.$emit('update:group-desc', Array.isArray(this.groupDesc) ? groupDesc : groupDesc[0]);\n    },\n\n    multiSort(multiSort) {\n      this.updateOptions({\n        multiSort\n      });\n    },\n\n    'internalOptions.multiSort'(multiSort) {\n      this.$emit('update:multi-sort', multiSort);\n    },\n\n    mustSort(mustSort) {\n      this.updateOptions({\n        mustSort\n      });\n    },\n\n    'internalOptions.mustSort'(mustSort) {\n      this.$emit('update:must-sort', mustSort);\n    },\n\n    pageCount: {\n      handler(pageCount) {\n        this.$emit('page-count', pageCount);\n      },\n\n      immediate: true\n    },\n    computedItems: {\n      handler(computedItems) {\n        this.$emit('current-items', computedItems);\n      },\n\n      immediate: true\n    }\n  },\n  methods: {\n    toggle(key, oldBy, oldDesc, page, mustSort, multiSort) {\n      let by = oldBy.slice();\n      let desc = oldDesc.slice();\n      const byIndex = by.findIndex(k => k === key);\n\n      if (byIndex < 0) {\n        if (!multiSort) {\n          by = [];\n          desc = [];\n        }\n\n        by.push(key);\n        desc.push(false);\n      } else if (byIndex >= 0 && !desc[byIndex]) {\n        desc[byIndex] = true;\n      } else if (!mustSort) {\n        by.splice(byIndex, 1);\n        desc.splice(byIndex, 1);\n      } else {\n        desc[byIndex] = false;\n      } // Reset page to 1 if sortBy or sortDesc have changed\n\n\n      if (!deepEqual(by, oldBy) || !deepEqual(desc, oldDesc)) {\n        page = 1;\n      }\n\n      return {\n        by,\n        desc,\n        page\n      };\n    },\n\n    group(key) {\n      const {\n        by: groupBy,\n        desc: groupDesc,\n        page\n      } = this.toggle(key, this.internalOptions.groupBy, this.internalOptions.groupDesc, this.internalOptions.page, true, false);\n      this.updateOptions({\n        groupBy,\n        groupDesc,\n        page\n      });\n    },\n\n    sort(key) {\n      if (Array.isArray(key)) return this.sortArray(key);\n      const {\n        by: sortBy,\n        desc: sortDesc,\n        page\n      } = this.toggle(key, this.internalOptions.sortBy, this.internalOptions.sortDesc, this.internalOptions.page, this.mustSort, this.multiSort);\n      this.updateOptions({\n        sortBy,\n        sortDesc,\n        page\n      });\n    },\n\n    sortArray(sortBy) {\n      const sortDesc = sortBy.map(s => {\n        const i = this.internalOptions.sortBy.findIndex(k => k === s);\n        return i > -1 ? this.internalOptions.sortDesc[i] : false;\n      });\n      this.updateOptions({\n        sortBy,\n        sortDesc\n      });\n    },\n\n    updateOptions(options) {\n      this.internalOptions = { ...this.internalOptions,\n        ...options,\n        page: this.serverItemsLength < 0 ? Math.max(1, Math.min(options.page || this.internalOptions.page, this.pageCount)) : options.page || this.internalOptions.page\n      };\n    },\n\n    sortItems(items) {\n      const sortBy = this.internalOptions.groupBy.concat(this.internalOptions.sortBy);\n      const sortDesc = this.internalOptions.groupDesc.concat(this.internalOptions.sortDesc);\n      return this.customSort(items, sortBy, sortDesc, this.locale);\n    },\n\n    paginateItems(items) {\n      // Make sure we don't try to display non-existant page if items suddenly change\n      // TODO: Could possibly move this to pageStart/pageStop?\n      if (items.length < this.pageStart) this.internalOptions.page = 1;\n      return items.slice(this.pageStart, this.pageStop);\n    }\n\n  },\n\n  render() {\n    return this.$scopedSlots.default && this.$scopedSlots.default(this.scopedProps);\n  }\n\n});\n//# sourceMappingURL=VData.js.map"]}]}
{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\themeable\\index.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\themeable\\index.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nexport function functionalThemeClasses(context) {\n  const vm = { ...context.props,\n    ...context.injections\n  };\n  const isDark = Themeable.options.computed.isDark.call(vm);\n  return Themeable.options.computed.themeClasses.call({\n    isDark\n  });\n}\n/* @vue/component */\n\nconst Themeable = Vue.extend().extend({\n  name: 'themeable',\n\n  provide() {\n    return {\n      theme: this.themeableProvide\n    };\n  },\n\n  inject: {\n    theme: {\n      default: {\n        isDark: false\n      }\n    }\n  },\n  props: {\n    dark: {\n      type: Boolean,\n      default: null\n    },\n    light: {\n      type: Boolean,\n      default: null\n    }\n  },\n\n  data() {\n    return {\n      themeableProvide: {\n        isDark: false\n      }\n    };\n  },\n\n  computed: {\n    appIsDark() {\n      return this.$vuetify.theme.dark || false;\n    },\n\n    isDark() {\n      if (this.dark === true) {\n        // explicitly dark\n        return true;\n      } else if (this.light === true) {\n        // explicitly light\n        return false;\n      } else {\n        // inherit from parent, or default false if there is none\n        return this.theme.isDark;\n      }\n    },\n\n    themeClasses() {\n      return {\n        'theme--dark': this.isDark,\n        'theme--light': !this.isDark\n      };\n    },\n\n    /** Used by menus and dialogs, inherits from v-app instead of the parent */\n    rootIsDark() {\n      if (this.dark === true) {\n        // explicitly dark\n        return true;\n      } else if (this.light === true) {\n        // explicitly light\n        return false;\n      } else {\n        // inherit from v-app\n        return this.appIsDark;\n      }\n    },\n\n    rootThemeClasses() {\n      return {\n        'theme--dark': this.rootIsDark,\n        'theme--light': !this.rootIsDark\n      };\n    }\n\n  },\n  watch: {\n    isDark: {\n      handler(newVal, oldVal) {\n        if (newVal !== oldVal) {\n          this.themeableProvide.isDark = this.isDark;\n        }\n      },\n\n      immediate: true\n    }\n  }\n});\nexport default Themeable;",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\themeable\\index.js"],"names":["Vue","functionalThemeClasses","context","vm","props","injections","isDark","Themeable","options","computed","call","themeClasses","extend","name","provide","theme","themeableProvide","inject","default","dark","type","Boolean","light","data","appIsDark","$vuetify","rootIsDark","rootThemeClasses","watch","handler","newVal","oldVal","immediate"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAO,SAASC,sBAAT,CAAgCC,OAAhC,EAAyC;AAC9C,QAAMC,EAAE,GAAG,EAAE,GAAGD,OAAO,CAACE,KAAb;AACT,OAAGF,OAAO,CAACG;AADF,GAAX;AAGA,QAAMC,MAAM,GAAGC,SAAS,CAACC,OAAV,CAAkBC,QAAlB,CAA2BH,MAA3B,CAAkCI,IAAlC,CAAuCP,EAAvC,CAAf;AACA,SAAOI,SAAS,CAACC,OAAV,CAAkBC,QAAlB,CAA2BE,YAA3B,CAAwCD,IAAxC,CAA6C;AAClDJ,IAAAA;AADkD,GAA7C,CAAP;AAGD;AACD;;AAEA,MAAMC,SAAS,GAAGP,GAAG,CAACY,MAAJ,GAAaA,MAAb,CAAoB;AACpCC,EAAAA,IAAI,EAAE,WAD8B;;AAGpCC,EAAAA,OAAO,GAAG;AACR,WAAO;AACLC,MAAAA,KAAK,EAAE,KAAKC;AADP,KAAP;AAGD,GAPmC;;AASpCC,EAAAA,MAAM,EAAE;AACNF,IAAAA,KAAK,EAAE;AACLG,MAAAA,OAAO,EAAE;AACPZ,QAAAA,MAAM,EAAE;AADD;AADJ;AADD,GAT4B;AAgBpCF,EAAAA,KAAK,EAAE;AACLe,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEC,OADF;AAEJH,MAAAA,OAAO,EAAE;AAFL,KADD;AAKLI,IAAAA,KAAK,EAAE;AACLF,MAAAA,IAAI,EAAEC,OADD;AAELH,MAAAA,OAAO,EAAE;AAFJ;AALF,GAhB6B;;AA2BpCK,EAAAA,IAAI,GAAG;AACL,WAAO;AACLP,MAAAA,gBAAgB,EAAE;AAChBV,QAAAA,MAAM,EAAE;AADQ;AADb,KAAP;AAKD,GAjCmC;;AAmCpCG,EAAAA,QAAQ,EAAE;AACRe,IAAAA,SAAS,GAAG;AACV,aAAO,KAAKC,QAAL,CAAcV,KAAd,CAAoBI,IAApB,IAA4B,KAAnC;AACD,KAHO;;AAKRb,IAAAA,MAAM,GAAG;AACP,UAAI,KAAKa,IAAL,KAAc,IAAlB,EAAwB;AACtB;AACA,eAAO,IAAP;AACD,OAHD,MAGO,IAAI,KAAKG,KAAL,KAAe,IAAnB,EAAyB;AAC9B;AACA,eAAO,KAAP;AACD,OAHM,MAGA;AACL;AACA,eAAO,KAAKP,KAAL,CAAWT,MAAlB;AACD;AACF,KAhBO;;AAkBRK,IAAAA,YAAY,GAAG;AACb,aAAO;AACL,uBAAe,KAAKL,MADf;AAEL,wBAAgB,CAAC,KAAKA;AAFjB,OAAP;AAID,KAvBO;;AAyBR;AACAoB,IAAAA,UAAU,GAAG;AACX,UAAI,KAAKP,IAAL,KAAc,IAAlB,EAAwB;AACtB;AACA,eAAO,IAAP;AACD,OAHD,MAGO,IAAI,KAAKG,KAAL,KAAe,IAAnB,EAAyB;AAC9B;AACA,eAAO,KAAP;AACD,OAHM,MAGA;AACL;AACA,eAAO,KAAKE,SAAZ;AACD;AACF,KArCO;;AAuCRG,IAAAA,gBAAgB,GAAG;AACjB,aAAO;AACL,uBAAe,KAAKD,UADf;AAEL,wBAAgB,CAAC,KAAKA;AAFjB,OAAP;AAID;;AA5CO,GAnC0B;AAkFpCE,EAAAA,KAAK,EAAE;AACLtB,IAAAA,MAAM,EAAE;AACNuB,MAAAA,OAAO,CAACC,MAAD,EAASC,MAAT,EAAiB;AACtB,YAAID,MAAM,KAAKC,MAAf,EAAuB;AACrB,eAAKf,gBAAL,CAAsBV,MAAtB,GAA+B,KAAKA,MAApC;AACD;AACF,OALK;;AAON0B,MAAAA,SAAS,EAAE;AAPL;AADH;AAlF6B,CAApB,CAAlB;AA8FA,eAAezB,SAAf","sourcesContent":["import Vue from 'vue';\nexport function functionalThemeClasses(context) {\n  const vm = { ...context.props,\n    ...context.injections\n  };\n  const isDark = Themeable.options.computed.isDark.call(vm);\n  return Themeable.options.computed.themeClasses.call({\n    isDark\n  });\n}\n/* @vue/component */\n\nconst Themeable = Vue.extend().extend({\n  name: 'themeable',\n\n  provide() {\n    return {\n      theme: this.themeableProvide\n    };\n  },\n\n  inject: {\n    theme: {\n      default: {\n        isDark: false\n      }\n    }\n  },\n  props: {\n    dark: {\n      type: Boolean,\n      default: null\n    },\n    light: {\n      type: Boolean,\n      default: null\n    }\n  },\n\n  data() {\n    return {\n      themeableProvide: {\n        isDark: false\n      }\n    };\n  },\n\n  computed: {\n    appIsDark() {\n      return this.$vuetify.theme.dark || false;\n    },\n\n    isDark() {\n      if (this.dark === true) {\n        // explicitly dark\n        return true;\n      } else if (this.light === true) {\n        // explicitly light\n        return false;\n      } else {\n        // inherit from parent, or default false if there is none\n        return this.theme.isDark;\n      }\n    },\n\n    themeClasses() {\n      return {\n        'theme--dark': this.isDark,\n        'theme--light': !this.isDark\n      };\n    },\n\n    /** Used by menus and dialogs, inherits from v-app instead of the parent */\n    rootIsDark() {\n      if (this.dark === true) {\n        // explicitly dark\n        return true;\n      } else if (this.light === true) {\n        // explicitly light\n        return false;\n      } else {\n        // inherit from v-app\n        return this.appIsDark;\n      }\n    },\n\n    rootThemeClasses() {\n      return {\n        'theme--dark': this.rootIsDark,\n        'theme--light': !this.rootIsDark\n      };\n    }\n\n  },\n  watch: {\n    isDark: {\n      handler(newVal, oldVal) {\n        if (newVal !== oldVal) {\n          this.themeableProvide.isDark = this.isDark;\n        }\n      },\n\n      immediate: true\n    }\n  }\n});\nexport default Themeable;\n//# sourceMappingURL=index.js.map"]}]}
{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VSelect\\VSelect.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VSelect\\VSelect.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/components/VTextField/VTextField.sass\";\nimport \"../../../src/components/VSelect/VSelect.sass\"; // Components\n\nimport VChip from '../VChip';\nimport VMenu from '../VMenu';\nimport VSelectList from './VSelectList'; // Extensions\n\nimport VTextField from '../VTextField/VTextField'; // Mixins\n\nimport Comparable from '../../mixins/comparable';\nimport Filterable from '../../mixins/filterable'; // Directives\n\nimport ClickOutside from '../../directives/click-outside'; // Utilities\n\nimport { getPropertyFromItem, keyCodes } from '../../util/helpers';\nimport { consoleError } from '../../util/console'; // Types\n\nimport mixins from '../../util/mixins';\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304\n};\nconst baseMixins = mixins(VTextField, Comparable, Filterable);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-select',\n  directives: {\n    ClickOutside\n  },\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown'\n    },\n    attach: {\n      default: false\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    itemColor: {\n      type: String,\n      default: 'primary'\n    },\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled'\n    },\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text'\n    },\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value'\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean\n  },\n\n  data() {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      content: null,\n      isBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined ? this.value : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0\n    };\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems() {\n      return this.filterDuplicates(this.cachedItems.concat(this.items));\n    },\n\n    classes() {\n      return { ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple\n      };\n    },\n\n    /* Used by other components to overwrite */\n    computedItems() {\n      return this.allItems;\n    },\n\n    computedOwns() {\n      return `list-${this._uid}`;\n    },\n\n    counterValue() {\n      return this.multiple ? this.selectedItems.length : (this.getText(this.selectedItems[0]) || '').toString().length;\n    },\n\n    directives() {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: this.blur,\n        args: {\n          closeConditional: this.closeConditional\n        }\n      }] : undefined;\n    },\n\n    dynamicHeight() {\n      return 'auto';\n    },\n\n    hasChips() {\n      return this.chips || this.smallChips;\n    },\n\n    hasSlot() {\n      return Boolean(this.hasChips || this.$scopedSlots.selection);\n    },\n\n    isDirty() {\n      return this.selectedItems.length > 0;\n    },\n\n    listData() {\n      const scopeId = this.$vnode && this.$vnode.context.$options._scopeId;\n      const attrs = scopeId ? {\n        [scopeId]: true\n      } : {};\n      return {\n        attrs: { ...attrs,\n          id: this.computedOwns\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems\n        },\n        on: {\n          select: this.selectItem\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item\n        }\n      };\n    },\n\n    staticList() {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used');\n      }\n\n      return this.$createElement(VSelectList, this.listData);\n    },\n\n    virtualizedItems() {\n      return this.$_menuProps.auto ? this.computedItems : this.computedItems.slice(0, this.lastItem);\n    },\n\n    menuCanShow: () => true,\n\n    $_menuProps() {\n      let normalisedProps = typeof this.menuProps === 'string' ? this.menuProps.split(',') : this.menuProps;\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true;\n          return acc;\n        }, {});\n      }\n\n      return { ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0,\n        ...normalisedProps\n      };\n    }\n\n  },\n  watch: {\n    internalValue(val) {\n      this.initialValue = val;\n      this.setSelectedItems();\n    },\n\n    isBooted() {\n      this.$nextTick(() => {\n        if (this.content && this.content.addEventListener) {\n          this.content.addEventListener('scroll', this.onScroll, false);\n        }\n      });\n    },\n\n    isMenuActive(val) {\n      this.$nextTick(() => this.onMenuActiveChange(val));\n      if (!val) return;\n      this.isBooted = true;\n    },\n\n    items: {\n      immediate: true,\n\n      handler(val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val));\n          });\n        }\n\n        this.setSelectedItems();\n      }\n\n    }\n  },\n\n  mounted() {\n    this.content = this.$refs.menu && this.$refs.menu.$refs.content;\n  },\n\n  methods: {\n    /** @public */\n    blur(e) {\n      VTextField.options.methods.blur.call(this, e);\n      this.isMenuActive = false;\n      this.isFocused = false;\n      this.selectedIndex = -1;\n    },\n\n    /** @public */\n    activateMenu() {\n      if (this.disabled || this.readonly || this.isMenuActive) return;\n      this.isMenuActive = true;\n    },\n\n    clearableCallback() {\n      this.setValue(this.multiple ? [] : undefined);\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus());\n      if (this.openOnClear) this.isMenuActive = true;\n    },\n\n    closeConditional(e) {\n      return !this._isDestroyed && // Click originates from outside the menu content\n      this.content && !this.content.contains(e.target) && // Click originates from outside the element\n      this.$el && !this.$el.contains(e.target) && e.target !== this.$el;\n    },\n\n    filterDuplicates(arr) {\n      const uniqueValues = new Map();\n\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index];\n        const val = this.getValue(item); // TODO: comparator\n\n        !uniqueValues.has(val) && uniqueValues.set(val, item);\n      }\n\n      return Array.from(uniqueValues.values());\n    },\n\n    findExistingIndex(item) {\n      const itemValue = this.getValue(item);\n      return (this.internalValue || []).findIndex(i => this.valueComparator(this.getValue(i), itemValue));\n    },\n\n    genChipSelection(item, index) {\n      const isDisabled = this.disabled || this.readonly || this.getDisabled(item);\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: {\n          tabindex: -1\n        },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips\n        },\n        on: {\n          click: e => {\n            if (isDisabled) return;\n            e.stopPropagation();\n            this.selectedIndex = index;\n          },\n          'click:close': () => this.onChipInput(item)\n        },\n        key: JSON.stringify(this.getValue(item))\n      }, this.getText(item));\n    },\n\n    genCommaSelection(item, index, last) {\n      const color = index === this.selectedIndex && this.computedColor;\n      const isDisabled = this.disabled || this.getDisabled(item);\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled\n        },\n        key: JSON.stringify(this.getValue(item))\n      }), `${this.getText(item)}${last ? '' : ', '}`);\n    },\n\n    genDefaultSlot() {\n      const selections = this.genSelections();\n      const input = this.genInput(); // If the return is an empty array\n      // push the input\n\n      if (Array.isArray(selections)) {\n        selections.push(input); // Otherwise push it into children\n      } else {\n        selections.children = selections.children || [];\n        selections.children.push(input);\n      }\n\n      return [this.genFieldset(), this.$createElement('div', {\n        staticClass: 'v-select__slot',\n        directives: this.directives\n      }, [this.genLabel(), this.prefix ? this.genAffix('prefix') : null, selections, this.suffix ? this.genAffix('suffix') : null, this.genClearIcon(), this.genIconSlot()]), this.genMenu(), this.genProgress()];\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data.domProps.value = null;\n      input.data.attrs.readonly = true;\n      input.data.attrs.type = 'text';\n      input.data.attrs['aria-readonly'] = true;\n      input.data.on.keypress = this.onKeyPress;\n      return input;\n    },\n\n    genInputSlot() {\n      const render = VTextField.options.methods.genInputSlot.call(this);\n      render.data.attrs = { ...render.data.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns\n      };\n      return render;\n    },\n\n    genList() {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot();\n      } else {\n        return this.staticList;\n      }\n    },\n\n    genListWithSlot() {\n      const slots = ['prepend-item', 'no-data', 'append-item'].filter(slotName => this.$slots[slotName]).map(slotName => this.$createElement('template', {\n        slot: slotName\n      }, this.$slots[slotName])); // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n\n      return this.$createElement(VSelectList, { ...this.listData\n      }, slots);\n    },\n\n    genMenu() {\n      const props = this.$_menuProps;\n      props.activator = this.$refs['input-slot']; // Attach to root el so that\n      // menu covers prepend/append icons\n\n      if ( // TODO: make this a computed property or helper or something\n      this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n      this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n      this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n          props.attach = this.$el;\n        } else {\n        props.attach = this.attach;\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: {\n          role: undefined\n        },\n        props,\n        on: {\n          input: val => {\n            this.isMenuActive = val;\n            this.isFocused = val;\n          }\n        },\n        ref: 'menu'\n      }, [this.genList()]);\n    },\n\n    genSelections() {\n      let length = this.selectedItems.length;\n      const children = new Array(length);\n      let genSelection;\n\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection;\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection;\n      } else {\n        genSelection = this.genCommaSelection;\n      }\n\n      while (length--) {\n        children[length] = genSelection(this.selectedItems[length], length, length === children.length - 1);\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections'\n      }, children);\n    },\n\n    genSlotSelection(item, index) {\n      return this.$scopedSlots.selection({\n        attrs: {\n          class: 'v-chip--select'\n        },\n        parent: this,\n        item,\n        index,\n        select: e => {\n          e.stopPropagation();\n          this.selectedIndex = index;\n        },\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly\n      });\n    },\n\n    getMenuIndex() {\n      return this.$refs.menu ? this.$refs.menu.listIndex : -1;\n    },\n\n    getDisabled(item) {\n      return getPropertyFromItem(item, this.itemDisabled, false);\n    },\n\n    getText(item) {\n      return getPropertyFromItem(item, this.itemText, item);\n    },\n\n    getValue(item) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item));\n    },\n\n    onBlur(e) {\n      e && this.$emit('blur', e);\n    },\n\n    onChipInput(item) {\n      if (this.multiple) this.selectItem(item);else this.setValue(null); // If all items have been deleted,\n      // open `v-menu`\n\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true;\n      } else {\n        this.isMenuActive = false;\n      }\n\n      this.selectedIndex = -1;\n    },\n\n    onClick() {\n      if (this.isDisabled) return;\n      this.isMenuActive = true;\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n        this.$emit('focus');\n      }\n    },\n\n    onEscDown(e) {\n      e.preventDefault();\n\n      if (this.isMenuActive) {\n        e.stopPropagation();\n        this.isMenuActive = false;\n      }\n    },\n\n    onKeyPress(e) {\n      if (this.multiple || this.readonly) return;\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds\n\n      const now = performance.now();\n\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = '';\n      }\n\n      this.keyboardLookupPrefix += e.key.toLowerCase();\n      this.keyboardLookupLastTime = now;\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString();\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix);\n      });\n      const item = this.allItems[index];\n\n      if (index !== -1) {\n        this.setValue(this.returnObject ? item : this.getValue(item));\n        setTimeout(() => this.setMenuIndex(index));\n      }\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n      const menu = this.$refs.menu; // If enter, space, open menu\n\n      if ([keyCodes.enter, keyCodes.space].includes(keyCode)) this.activateMenu();\n      if (!menu) return; // If menu is active, allow default\n      // listIndex change from menu\n\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e);\n          this.$emit('update:list-index', menu.listIndex);\n        });\n      } // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n\n\n      if (!this.isMenuActive && [keyCodes.up, keyCodes.down].includes(keyCode)) return this.onUpDown(e); // If escape deactivate the menu\n\n      if (keyCode === keyCodes.esc) return this.onEscDown(e); // If tab - select item or close menu\n\n      if (keyCode === keyCodes.tab) return this.onTabDown(e); // If space preventDefault\n\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e);\n    },\n\n    onMenuActiveChange(val) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (this.multiple && !val || this.getMenuIndex() > -1) return;\n      const menu = this.$refs.menu;\n      if (!menu || !this.isDirty) return; // When menu opens, set index of first active item\n\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i);\n          break;\n        }\n      }\n    },\n\n    onMouseUp(e) {\n      if (this.hasMouseDown && e.which !== 3) {\n        const appendInner = this.$refs['append-inner']; // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n\n        if (this.isMenuActive && appendInner && (appendInner === e.target || appendInner.contains(e.target))) {\n          this.$nextTick(() => this.isMenuActive = !this.isMenuActive); // If user is clicking in the container\n          // and field is enclosed, activate it\n        } else if (this.isEnclosed && !this.isDisabled) {\n          this.isMenuActive = true;\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e);\n    },\n\n    onScroll() {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => this.content.scrollTop = 0);\n      } else {\n        if (this.lastItem >= this.computedItems.length) return;\n        const showMoreItems = this.content.scrollHeight - (this.content.scrollTop + this.content.clientHeight) < 200;\n\n        if (showMoreItems) {\n          this.lastItem += 20;\n        }\n      }\n    },\n\n    onSpaceDown(e) {\n      e.preventDefault();\n    },\n\n    onTabDown(e) {\n      const menu = this.$refs.menu;\n      if (!menu) return;\n      const activeTile = menu.activeTile; // An item that is selected by\n      // menu-index should toggled\n\n      if (!this.multiple && activeTile && this.isMenuActive) {\n        e.preventDefault();\n        e.stopPropagation();\n        activeTile.click();\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e);\n      }\n    },\n\n    onUpDown(e) {\n      const menu = this.$refs.menu;\n      if (!menu) return;\n      e.preventDefault(); // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n\n      if (this.multiple) return this.activateMenu();\n      const keyCode = e.keyCode; // Cycle through available values to achieve\n      // select native behavior\n\n      menu.getTiles();\n      keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile();\n      menu.activeTile && menu.activeTile.click();\n    },\n\n    selectItem(item) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item));\n        this.isMenuActive = false;\n      } else {\n        const internalValue = (this.internalValue || []).slice();\n        const i = this.findExistingIndex(item);\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item);\n        this.setValue(internalValue.map(i => {\n          return this.returnObject ? i : this.getValue(i);\n        })); // When selecting multiple\n        // adjust menu after each\n        // selection\n\n        this.$nextTick(() => {\n          this.$refs.menu && this.$refs.menu.updateDimensions();\n        }); // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n\n        if (!this.multiple) return;\n        const listIndex = this.getMenuIndex();\n        this.setMenuIndex(-1); // There is no item to re-highlight\n        // when selections are hidden\n\n        if (this.hideSelected) return;\n        this.$nextTick(() => this.setMenuIndex(listIndex));\n      }\n    },\n\n    setMenuIndex(index) {\n      this.$refs.menu && (this.$refs.menu.listIndex = index);\n    },\n\n    setSelectedItems() {\n      const selectedItems = [];\n      const values = !this.multiple || !Array.isArray(this.internalValue) ? [this.internalValue] : this.internalValue;\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(this.getValue(v), this.getValue(value)));\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index]);\n        }\n      }\n\n      this.selectedItems = selectedItems;\n    },\n\n    setValue(value) {\n      const oldValue = this.internalValue;\n      this.internalValue = value;\n      value !== oldValue && this.$emit('change', value);\n    }\n\n  }\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VSelect\\VSelect.js"],"names":["VChip","VMenu","VSelectList","VTextField","Comparable","Filterable","ClickOutside","getPropertyFromItem","keyCodes","consoleError","mixins","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","extend","name","directives","props","appendIcon","type","String","default","attach","cacheItems","Boolean","chips","clearable","deletableChips","eager","hideSelected","items","Array","itemColor","itemDisabled","Function","itemText","itemValue","menuProps","Object","multiple","openOnClear","returnObject","smallChips","data","cachedItems","content","isBooted","isMenuActive","lastItem","lazyValue","value","undefined","selectedIndex","selectedItems","keyboardLookupPrefix","keyboardLookupLastTime","computed","allItems","filterDuplicates","concat","classes","options","call","hasChips","computedItems","computedOwns","_uid","counterValue","length","getText","toString","isFocused","blur","args","closeConditional","dynamicHeight","hasSlot","$scopedSlots","selection","isDirty","listData","scopeId","$vnode","context","$options","_scopeId","attrs","id","action","color","dense","virtualizedItems","noDataText","$vuetify","lang","t","on","select","selectItem","scopedSlots","item","staticList","$slots","$createElement","$_menuProps","auto","slice","menuCanShow","normalisedProps","split","isArray","reduce","acc","p","trim","nudgeBottom","offsetY","watch","internalValue","val","initialValue","setSelectedItems","$nextTick","addEventListener","onScroll","onMenuActiveChange","immediate","handler","mounted","$refs","menu","methods","e","activateMenu","disabled","readonly","clearableCallback","setValue","input","focus","_isDestroyed","contains","target","$el","arr","uniqueValues","Map","index","getValue","has","set","from","values","findExistingIndex","findIndex","i","valueComparator","genChipSelection","isDisabled","getDisabled","staticClass","tabindex","close","inputValue","small","click","stopPropagation","onChipInput","key","JSON","stringify","genCommaSelection","last","computedColor","setTextColor","class","genDefaultSlot","selections","genSelections","genInput","push","children","genFieldset","genLabel","prefix","genAffix","suffix","genClearIcon","genIconSlot","genMenu","genProgress","domProps","keypress","onKeyPress","genInputSlot","render","role","genList","genListWithSlot","slots","filter","slotName","map","slot","activator","ref","genSelection","genSlotSelection","parent","selected","getMenuIndex","listIndex","onBlur","$emit","onClick","onEscDown","preventDefault","KEYBOARD_LOOKUP_THRESHOLD","now","performance","toLowerCase","text","startsWith","setTimeout","setMenuIndex","onKeyDown","keyCode","enter","space","includes","tab","changeListIndex","up","down","onUpDown","esc","onTabDown","onSpaceDown","tiles","getAttribute","onMouseUp","hasMouseDown","which","appendInner","isEnclosed","requestAnimationFrame","scrollTop","showMoreItems","scrollHeight","clientHeight","activeTile","getTiles","prevTile","nextTile","splice","updateDimensions","v","oldValue"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/components/VTextField/VTextField.sass\";\nimport \"../../../src/components/VSelect/VSelect.sass\"; // Components\n\nimport VChip from '../VChip';\nimport VMenu from '../VMenu';\nimport VSelectList from './VSelectList'; // Extensions\n\nimport VTextField from '../VTextField/VTextField'; // Mixins\n\nimport Comparable from '../../mixins/comparable';\nimport Filterable from '../../mixins/filterable'; // Directives\n\nimport ClickOutside from '../../directives/click-outside'; // Utilities\n\nimport { getPropertyFromItem, keyCodes } from '../../util/helpers';\nimport { consoleError } from '../../util/console'; // Types\n\nimport mixins from '../../util/mixins';\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304\n};\nconst baseMixins = mixins(VTextField, Comparable, Filterable);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-select',\n  directives: {\n    ClickOutside\n  },\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown'\n    },\n    attach: {\n      default: false\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    itemColor: {\n      type: String,\n      default: 'primary'\n    },\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled'\n    },\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text'\n    },\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value'\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean\n  },\n\n  data() {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      content: null,\n      isBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined ? this.value : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0\n    };\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems() {\n      return this.filterDuplicates(this.cachedItems.concat(this.items));\n    },\n\n    classes() {\n      return { ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple\n      };\n    },\n\n    /* Used by other components to overwrite */\n    computedItems() {\n      return this.allItems;\n    },\n\n    computedOwns() {\n      return `list-${this._uid}`;\n    },\n\n    counterValue() {\n      return this.multiple ? this.selectedItems.length : (this.getText(this.selectedItems[0]) || '').toString().length;\n    },\n\n    directives() {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: this.blur,\n        args: {\n          closeConditional: this.closeConditional\n        }\n      }] : undefined;\n    },\n\n    dynamicHeight() {\n      return 'auto';\n    },\n\n    hasChips() {\n      return this.chips || this.smallChips;\n    },\n\n    hasSlot() {\n      return Boolean(this.hasChips || this.$scopedSlots.selection);\n    },\n\n    isDirty() {\n      return this.selectedItems.length > 0;\n    },\n\n    listData() {\n      const scopeId = this.$vnode && this.$vnode.context.$options._scopeId;\n      const attrs = scopeId ? {\n        [scopeId]: true\n      } : {};\n      return {\n        attrs: { ...attrs,\n          id: this.computedOwns\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems\n        },\n        on: {\n          select: this.selectItem\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item\n        }\n      };\n    },\n\n    staticList() {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used');\n      }\n\n      return this.$createElement(VSelectList, this.listData);\n    },\n\n    virtualizedItems() {\n      return this.$_menuProps.auto ? this.computedItems : this.computedItems.slice(0, this.lastItem);\n    },\n\n    menuCanShow: () => true,\n\n    $_menuProps() {\n      let normalisedProps = typeof this.menuProps === 'string' ? this.menuProps.split(',') : this.menuProps;\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true;\n          return acc;\n        }, {});\n      }\n\n      return { ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0,\n        ...normalisedProps\n      };\n    }\n\n  },\n  watch: {\n    internalValue(val) {\n      this.initialValue = val;\n      this.setSelectedItems();\n    },\n\n    isBooted() {\n      this.$nextTick(() => {\n        if (this.content && this.content.addEventListener) {\n          this.content.addEventListener('scroll', this.onScroll, false);\n        }\n      });\n    },\n\n    isMenuActive(val) {\n      this.$nextTick(() => this.onMenuActiveChange(val));\n      if (!val) return;\n      this.isBooted = true;\n    },\n\n    items: {\n      immediate: true,\n\n      handler(val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val));\n          });\n        }\n\n        this.setSelectedItems();\n      }\n\n    }\n  },\n\n  mounted() {\n    this.content = this.$refs.menu && this.$refs.menu.$refs.content;\n  },\n\n  methods: {\n    /** @public */\n    blur(e) {\n      VTextField.options.methods.blur.call(this, e);\n      this.isMenuActive = false;\n      this.isFocused = false;\n      this.selectedIndex = -1;\n    },\n\n    /** @public */\n    activateMenu() {\n      if (this.disabled || this.readonly || this.isMenuActive) return;\n      this.isMenuActive = true;\n    },\n\n    clearableCallback() {\n      this.setValue(this.multiple ? [] : undefined);\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus());\n      if (this.openOnClear) this.isMenuActive = true;\n    },\n\n    closeConditional(e) {\n      return !this._isDestroyed && // Click originates from outside the menu content\n      this.content && !this.content.contains(e.target) && // Click originates from outside the element\n      this.$el && !this.$el.contains(e.target) && e.target !== this.$el;\n    },\n\n    filterDuplicates(arr) {\n      const uniqueValues = new Map();\n\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index];\n        const val = this.getValue(item); // TODO: comparator\n\n        !uniqueValues.has(val) && uniqueValues.set(val, item);\n      }\n\n      return Array.from(uniqueValues.values());\n    },\n\n    findExistingIndex(item) {\n      const itemValue = this.getValue(item);\n      return (this.internalValue || []).findIndex(i => this.valueComparator(this.getValue(i), itemValue));\n    },\n\n    genChipSelection(item, index) {\n      const isDisabled = this.disabled || this.readonly || this.getDisabled(item);\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: {\n          tabindex: -1\n        },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips\n        },\n        on: {\n          click: e => {\n            if (isDisabled) return;\n            e.stopPropagation();\n            this.selectedIndex = index;\n          },\n          'click:close': () => this.onChipInput(item)\n        },\n        key: JSON.stringify(this.getValue(item))\n      }, this.getText(item));\n    },\n\n    genCommaSelection(item, index, last) {\n      const color = index === this.selectedIndex && this.computedColor;\n      const isDisabled = this.disabled || this.getDisabled(item);\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled\n        },\n        key: JSON.stringify(this.getValue(item))\n      }), `${this.getText(item)}${last ? '' : ', '}`);\n    },\n\n    genDefaultSlot() {\n      const selections = this.genSelections();\n      const input = this.genInput(); // If the return is an empty array\n      // push the input\n\n      if (Array.isArray(selections)) {\n        selections.push(input); // Otherwise push it into children\n      } else {\n        selections.children = selections.children || [];\n        selections.children.push(input);\n      }\n\n      return [this.genFieldset(), this.$createElement('div', {\n        staticClass: 'v-select__slot',\n        directives: this.directives\n      }, [this.genLabel(), this.prefix ? this.genAffix('prefix') : null, selections, this.suffix ? this.genAffix('suffix') : null, this.genClearIcon(), this.genIconSlot()]), this.genMenu(), this.genProgress()];\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data.domProps.value = null;\n      input.data.attrs.readonly = true;\n      input.data.attrs.type = 'text';\n      input.data.attrs['aria-readonly'] = true;\n      input.data.on.keypress = this.onKeyPress;\n      return input;\n    },\n\n    genInputSlot() {\n      const render = VTextField.options.methods.genInputSlot.call(this);\n      render.data.attrs = { ...render.data.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns\n      };\n      return render;\n    },\n\n    genList() {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot();\n      } else {\n        return this.staticList;\n      }\n    },\n\n    genListWithSlot() {\n      const slots = ['prepend-item', 'no-data', 'append-item'].filter(slotName => this.$slots[slotName]).map(slotName => this.$createElement('template', {\n        slot: slotName\n      }, this.$slots[slotName])); // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n\n      return this.$createElement(VSelectList, { ...this.listData\n      }, slots);\n    },\n\n    genMenu() {\n      const props = this.$_menuProps;\n      props.activator = this.$refs['input-slot']; // Attach to root el so that\n      // menu covers prepend/append icons\n\n      if ( // TODO: make this a computed property or helper or something\n      this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n      this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n      this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n          props.attach = this.$el;\n        } else {\n        props.attach = this.attach;\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: {\n          role: undefined\n        },\n        props,\n        on: {\n          input: val => {\n            this.isMenuActive = val;\n            this.isFocused = val;\n          }\n        },\n        ref: 'menu'\n      }, [this.genList()]);\n    },\n\n    genSelections() {\n      let length = this.selectedItems.length;\n      const children = new Array(length);\n      let genSelection;\n\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection;\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection;\n      } else {\n        genSelection = this.genCommaSelection;\n      }\n\n      while (length--) {\n        children[length] = genSelection(this.selectedItems[length], length, length === children.length - 1);\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections'\n      }, children);\n    },\n\n    genSlotSelection(item, index) {\n      return this.$scopedSlots.selection({\n        attrs: {\n          class: 'v-chip--select'\n        },\n        parent: this,\n        item,\n        index,\n        select: e => {\n          e.stopPropagation();\n          this.selectedIndex = index;\n        },\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly\n      });\n    },\n\n    getMenuIndex() {\n      return this.$refs.menu ? this.$refs.menu.listIndex : -1;\n    },\n\n    getDisabled(item) {\n      return getPropertyFromItem(item, this.itemDisabled, false);\n    },\n\n    getText(item) {\n      return getPropertyFromItem(item, this.itemText, item);\n    },\n\n    getValue(item) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item));\n    },\n\n    onBlur(e) {\n      e && this.$emit('blur', e);\n    },\n\n    onChipInput(item) {\n      if (this.multiple) this.selectItem(item);else this.setValue(null); // If all items have been deleted,\n      // open `v-menu`\n\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true;\n      } else {\n        this.isMenuActive = false;\n      }\n\n      this.selectedIndex = -1;\n    },\n\n    onClick() {\n      if (this.isDisabled) return;\n      this.isMenuActive = true;\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n        this.$emit('focus');\n      }\n    },\n\n    onEscDown(e) {\n      e.preventDefault();\n\n      if (this.isMenuActive) {\n        e.stopPropagation();\n        this.isMenuActive = false;\n      }\n    },\n\n    onKeyPress(e) {\n      if (this.multiple || this.readonly) return;\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds\n\n      const now = performance.now();\n\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = '';\n      }\n\n      this.keyboardLookupPrefix += e.key.toLowerCase();\n      this.keyboardLookupLastTime = now;\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString();\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix);\n      });\n      const item = this.allItems[index];\n\n      if (index !== -1) {\n        this.setValue(this.returnObject ? item : this.getValue(item));\n        setTimeout(() => this.setMenuIndex(index));\n      }\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n      const menu = this.$refs.menu; // If enter, space, open menu\n\n      if ([keyCodes.enter, keyCodes.space].includes(keyCode)) this.activateMenu();\n      if (!menu) return; // If menu is active, allow default\n      // listIndex change from menu\n\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e);\n          this.$emit('update:list-index', menu.listIndex);\n        });\n      } // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n\n\n      if (!this.isMenuActive && [keyCodes.up, keyCodes.down].includes(keyCode)) return this.onUpDown(e); // If escape deactivate the menu\n\n      if (keyCode === keyCodes.esc) return this.onEscDown(e); // If tab - select item or close menu\n\n      if (keyCode === keyCodes.tab) return this.onTabDown(e); // If space preventDefault\n\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e);\n    },\n\n    onMenuActiveChange(val) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (this.multiple && !val || this.getMenuIndex() > -1) return;\n      const menu = this.$refs.menu;\n      if (!menu || !this.isDirty) return; // When menu opens, set index of first active item\n\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i);\n          break;\n        }\n      }\n    },\n\n    onMouseUp(e) {\n      if (this.hasMouseDown && e.which !== 3) {\n        const appendInner = this.$refs['append-inner']; // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n\n        if (this.isMenuActive && appendInner && (appendInner === e.target || appendInner.contains(e.target))) {\n          this.$nextTick(() => this.isMenuActive = !this.isMenuActive); // If user is clicking in the container\n          // and field is enclosed, activate it\n        } else if (this.isEnclosed && !this.isDisabled) {\n          this.isMenuActive = true;\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e);\n    },\n\n    onScroll() {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => this.content.scrollTop = 0);\n      } else {\n        if (this.lastItem >= this.computedItems.length) return;\n        const showMoreItems = this.content.scrollHeight - (this.content.scrollTop + this.content.clientHeight) < 200;\n\n        if (showMoreItems) {\n          this.lastItem += 20;\n        }\n      }\n    },\n\n    onSpaceDown(e) {\n      e.preventDefault();\n    },\n\n    onTabDown(e) {\n      const menu = this.$refs.menu;\n      if (!menu) return;\n      const activeTile = menu.activeTile; // An item that is selected by\n      // menu-index should toggled\n\n      if (!this.multiple && activeTile && this.isMenuActive) {\n        e.preventDefault();\n        e.stopPropagation();\n        activeTile.click();\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e);\n      }\n    },\n\n    onUpDown(e) {\n      const menu = this.$refs.menu;\n      if (!menu) return;\n      e.preventDefault(); // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n\n      if (this.multiple) return this.activateMenu();\n      const keyCode = e.keyCode; // Cycle through available values to achieve\n      // select native behavior\n\n      menu.getTiles();\n      keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile();\n      menu.activeTile && menu.activeTile.click();\n    },\n\n    selectItem(item) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item));\n        this.isMenuActive = false;\n      } else {\n        const internalValue = (this.internalValue || []).slice();\n        const i = this.findExistingIndex(item);\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item);\n        this.setValue(internalValue.map(i => {\n          return this.returnObject ? i : this.getValue(i);\n        })); // When selecting multiple\n        // adjust menu after each\n        // selection\n\n        this.$nextTick(() => {\n          this.$refs.menu && this.$refs.menu.updateDimensions();\n        }); // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n\n        if (!this.multiple) return;\n        const listIndex = this.getMenuIndex();\n        this.setMenuIndex(-1); // There is no item to re-highlight\n        // when selections are hidden\n\n        if (this.hideSelected) return;\n        this.$nextTick(() => this.setMenuIndex(listIndex));\n      }\n    },\n\n    setMenuIndex(index) {\n      this.$refs.menu && (this.$refs.menu.listIndex = index);\n    },\n\n    setSelectedItems() {\n      const selectedItems = [];\n      const values = !this.multiple || !Array.isArray(this.internalValue) ? [this.internalValue] : this.internalValue;\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(this.getValue(v), this.getValue(value)));\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index]);\n        }\n      }\n\n      this.selectedItems = selectedItems;\n    },\n\n    setValue(value) {\n      const oldValue = this.internalValue;\n      this.internalValue = value;\n      value !== oldValue && this.$emit('change', value);\n    }\n\n  }\n});\n//# sourceMappingURL=VSelect.js.map"]}]}
{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VCalendar\\mixins\\mouse.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VCalendar\\mixins\\mouse.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nexport default Vue.extend({\n  name: 'mouse',\n  methods: {\n    getDefaultMouseEventHandlers(suffix, getEvent) {\n      return this.getMouseEventHandlers({\n        ['click' + suffix]: {\n          event: 'click'\n        },\n        ['contextmenu' + suffix]: {\n          event: 'contextmenu',\n          prevent: true,\n          result: false\n        },\n        ['mousedown' + suffix]: {\n          event: 'mousedown'\n        },\n        ['mousemove' + suffix]: {\n          event: 'mousemove'\n        },\n        ['mouseup' + suffix]: {\n          event: 'mouseup'\n        },\n        ['mouseenter' + suffix]: {\n          event: 'mouseenter'\n        },\n        ['mouseleave' + suffix]: {\n          event: 'mouseleave'\n        },\n        ['touchstart' + suffix]: {\n          event: 'touchstart'\n        },\n        ['touchmove' + suffix]: {\n          event: 'touchmove'\n        },\n        ['touchend' + suffix]: {\n          event: 'touchend'\n        }\n      }, getEvent);\n    },\n\n    getMouseEventHandlers(events, getEvent) {\n      const on = {};\n\n      for (const event in events) {\n        const eventOptions = events[event];\n        if (!this.$listeners[event]) continue; // TODO somehow pull in modifiers\n\n        const prefix = eventOptions.passive ? '&' : (eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : '');\n        const key = prefix + eventOptions.event;\n\n        const handler = e => {\n          const mouseEvent = e;\n\n          if (eventOptions.button === undefined || mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button) {\n            if (eventOptions.prevent) {\n              e.preventDefault();\n            }\n\n            if (eventOptions.stop) {\n              e.stopPropagation();\n            }\n\n            this.$emit(event, getEvent(e));\n          }\n\n          return eventOptions.result;\n        };\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            on[key].push(handler);\n          } else {\n            on[key] = [on[key], handler];\n          }\n        } else {\n          on[key] = handler;\n        }\n      }\n\n      return on;\n    }\n\n  }\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VCalendar\\mixins\\mouse.js"],"names":["Vue","extend","name","methods","getDefaultMouseEventHandlers","suffix","getEvent","getMouseEventHandlers","event","prevent","result","events","on","eventOptions","$listeners","prefix","passive","once","capture","key","handler","e","mouseEvent","button","undefined","buttons","preventDefault","stop","stopPropagation","$emit","Array","isArray","push"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nexport default Vue.extend({\n  name: 'mouse',\n  methods: {\n    getDefaultMouseEventHandlers(suffix, getEvent) {\n      return this.getMouseEventHandlers({\n        ['click' + suffix]: {\n          event: 'click'\n        },\n        ['contextmenu' + suffix]: {\n          event: 'contextmenu',\n          prevent: true,\n          result: false\n        },\n        ['mousedown' + suffix]: {\n          event: 'mousedown'\n        },\n        ['mousemove' + suffix]: {\n          event: 'mousemove'\n        },\n        ['mouseup' + suffix]: {\n          event: 'mouseup'\n        },\n        ['mouseenter' + suffix]: {\n          event: 'mouseenter'\n        },\n        ['mouseleave' + suffix]: {\n          event: 'mouseleave'\n        },\n        ['touchstart' + suffix]: {\n          event: 'touchstart'\n        },\n        ['touchmove' + suffix]: {\n          event: 'touchmove'\n        },\n        ['touchend' + suffix]: {\n          event: 'touchend'\n        }\n      }, getEvent);\n    },\n\n    getMouseEventHandlers(events, getEvent) {\n      const on = {};\n\n      for (const event in events) {\n        const eventOptions = events[event];\n        if (!this.$listeners[event]) continue; // TODO somehow pull in modifiers\n\n        const prefix = eventOptions.passive ? '&' : (eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : '');\n        const key = prefix + eventOptions.event;\n\n        const handler = e => {\n          const mouseEvent = e;\n\n          if (eventOptions.button === undefined || mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button) {\n            if (eventOptions.prevent) {\n              e.preventDefault();\n            }\n\n            if (eventOptions.stop) {\n              e.stopPropagation();\n            }\n\n            this.$emit(event, getEvent(e));\n          }\n\n          return eventOptions.result;\n        };\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            on[key].push(handler);\n          } else {\n            on[key] = [on[key], handler];\n          }\n        } else {\n          on[key] = handler;\n        }\n      }\n\n      return on;\n    }\n\n  }\n});\n//# sourceMappingURL=mouse.js.map"]}]}
{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\translatable\\index.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\translatable\\index.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nexport default Vue.extend({\n  name: 'translatable',\n  props: {\n    height: Number\n  },\n  data: () => ({\n    elOffsetTop: 0,\n    parallax: 0,\n    parallaxDist: 0,\n    percentScrolled: 0,\n    scrollTop: 0,\n    windowHeight: 0,\n    windowBottom: 0\n  }),\n  computed: {\n    imgHeight() {\n      return this.objHeight();\n    }\n\n  },\n\n  beforeDestroy() {\n    window.removeEventListener('scroll', this.translate, false);\n    window.removeEventListener('resize', this.translate, false);\n  },\n\n  methods: {\n    calcDimensions() {\n      const offset = this.$el.getBoundingClientRect();\n      this.scrollTop = window.pageYOffset;\n      this.parallaxDist = this.imgHeight - this.height;\n      this.elOffsetTop = offset.top + this.scrollTop;\n      this.windowHeight = window.innerHeight;\n      this.windowBottom = this.scrollTop + this.windowHeight;\n    },\n\n    listeners() {\n      window.addEventListener('scroll', this.translate, false);\n      window.addEventListener('resize', this.translate, false);\n    },\n\n    /** @abstract **/\n    objHeight() {\n      throw new Error('Not implemented !');\n    },\n\n    translate() {\n      this.calcDimensions();\n      this.percentScrolled = (this.windowBottom - this.elOffsetTop) / (parseInt(this.height) + this.windowHeight);\n      this.parallax = Math.round(this.parallaxDist * this.percentScrolled);\n    }\n\n  }\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\translatable\\index.js"],"names":["Vue","extend","name","props","height","Number","data","elOffsetTop","parallax","parallaxDist","percentScrolled","scrollTop","windowHeight","windowBottom","computed","imgHeight","objHeight","beforeDestroy","window","removeEventListener","translate","methods","calcDimensions","offset","$el","getBoundingClientRect","pageYOffset","top","innerHeight","listeners","addEventListener","Error","parseInt","Math","round"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,eAAeA,GAAG,CAACC,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAE,cADkB;AAExBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEC;AADH,GAFiB;AAKxBC,EAAAA,IAAI,EAAE,OAAO;AACXC,IAAAA,WAAW,EAAE,CADF;AAEXC,IAAAA,QAAQ,EAAE,CAFC;AAGXC,IAAAA,YAAY,EAAE,CAHH;AAIXC,IAAAA,eAAe,EAAE,CAJN;AAKXC,IAAAA,SAAS,EAAE,CALA;AAMXC,IAAAA,YAAY,EAAE,CANH;AAOXC,IAAAA,YAAY,EAAE;AAPH,GAAP,CALkB;AAcxBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,GAAG;AACV,aAAO,KAAKC,SAAL,EAAP;AACD;;AAHO,GAdc;;AAqBxBC,EAAAA,aAAa,GAAG;AACdC,IAAAA,MAAM,CAACC,mBAAP,CAA2B,QAA3B,EAAqC,KAAKC,SAA1C,EAAqD,KAArD;AACAF,IAAAA,MAAM,CAACC,mBAAP,CAA2B,QAA3B,EAAqC,KAAKC,SAA1C,EAAqD,KAArD;AACD,GAxBuB;;AA0BxBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cAAc,GAAG;AACf,YAAMC,MAAM,GAAG,KAAKC,GAAL,CAASC,qBAAT,EAAf;AACA,WAAKd,SAAL,GAAiBO,MAAM,CAACQ,WAAxB;AACA,WAAKjB,YAAL,GAAoB,KAAKM,SAAL,GAAiB,KAAKX,MAA1C;AACA,WAAKG,WAAL,GAAmBgB,MAAM,CAACI,GAAP,GAAa,KAAKhB,SAArC;AACA,WAAKC,YAAL,GAAoBM,MAAM,CAACU,WAA3B;AACA,WAAKf,YAAL,GAAoB,KAAKF,SAAL,GAAiB,KAAKC,YAA1C;AACD,KARM;;AAUPiB,IAAAA,SAAS,GAAG;AACVX,MAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkC,KAAKV,SAAvC,EAAkD,KAAlD;AACAF,MAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkC,KAAKV,SAAvC,EAAkD,KAAlD;AACD,KAbM;;AAeP;AACAJ,IAAAA,SAAS,GAAG;AACV,YAAM,IAAIe,KAAJ,CAAU,mBAAV,CAAN;AACD,KAlBM;;AAoBPX,IAAAA,SAAS,GAAG;AACV,WAAKE,cAAL;AACA,WAAKZ,eAAL,GAAuB,CAAC,KAAKG,YAAL,GAAoB,KAAKN,WAA1B,KAA0CyB,QAAQ,CAAC,KAAK5B,MAAN,CAAR,GAAwB,KAAKQ,YAAvE,CAAvB;AACA,WAAKJ,QAAL,GAAgByB,IAAI,CAACC,KAAL,CAAW,KAAKzB,YAAL,GAAoB,KAAKC,eAApC,CAAhB;AACD;;AAxBM;AA1Be,CAAX,CAAf","sourcesContent":["import Vue from 'vue';\nexport default Vue.extend({\n  name: 'translatable',\n  props: {\n    height: Number\n  },\n  data: () => ({\n    elOffsetTop: 0,\n    parallax: 0,\n    parallaxDist: 0,\n    percentScrolled: 0,\n    scrollTop: 0,\n    windowHeight: 0,\n    windowBottom: 0\n  }),\n  computed: {\n    imgHeight() {\n      return this.objHeight();\n    }\n\n  },\n\n  beforeDestroy() {\n    window.removeEventListener('scroll', this.translate, false);\n    window.removeEventListener('resize', this.translate, false);\n  },\n\n  methods: {\n    calcDimensions() {\n      const offset = this.$el.getBoundingClientRect();\n      this.scrollTop = window.pageYOffset;\n      this.parallaxDist = this.imgHeight - this.height;\n      this.elOffsetTop = offset.top + this.scrollTop;\n      this.windowHeight = window.innerHeight;\n      this.windowBottom = this.scrollTop + this.windowHeight;\n    },\n\n    listeners() {\n      window.addEventListener('scroll', this.translate, false);\n      window.addEventListener('resize', this.translate, false);\n    },\n\n    /** @abstract **/\n    objHeight() {\n      throw new Error('Not implemented !');\n    },\n\n    translate() {\n      this.calcDimensions();\n      this.percentScrolled = (this.windowBottom - this.elOffsetTop) / (parseInt(this.height) + this.windowHeight);\n      this.parallax = Math.round(this.parallaxDist * this.percentScrolled);\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map"]}]}
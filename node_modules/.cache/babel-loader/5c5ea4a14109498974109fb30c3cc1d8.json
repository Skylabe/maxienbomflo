{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\selectable\\index.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\selectable\\index.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Components\nimport VInput from '../../components/VInput'; // Mixins\n\nimport Rippleable from '../rippleable';\nimport Comparable from '../comparable'; // Utilities\n\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(VInput, Rippleable, Comparable).extend({\n  name: 'selectable',\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n  props: {\n    id: String,\n    inputValue: null,\n    falseValue: null,\n    trueValue: null,\n    multiple: {\n      type: Boolean,\n      default: null\n    },\n    label: String\n  },\n\n  data() {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue\n    };\n  },\n\n  computed: {\n    computedColor() {\n      if (!this.isActive) return undefined;\n      if (this.color) return this.color;\n      if (this.isDark && !this.appIsDark) return 'white';\n      return 'accent';\n    },\n\n    isMultiple() {\n      return this.multiple === true || this.multiple === null && Array.isArray(this.internalValue);\n    },\n\n    isActive() {\n      const value = this.value;\n      const input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false;\n        return input.some(item => this.valueComparator(item, value));\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value ? this.valueComparator(value, input) : Boolean(input);\n      }\n\n      return this.valueComparator(input, this.trueValue);\n    },\n\n    isDirty() {\n      return this.isActive;\n    }\n\n  },\n  watch: {\n    inputValue(val) {\n      this.lazyValue = val;\n      this.hasColor = val;\n    }\n\n  },\n  methods: {\n    genLabel() {\n      const label = VInput.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data.on = {\n        click: e => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault();\n          this.onChange();\n        }\n      };\n      return label;\n    },\n\n    genInput(type, attrs) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown\n        },\n        ref: 'input'\n      });\n    },\n\n    onBlur() {\n      this.isFocused = false;\n    },\n\n    onChange() {\n      if (this.isDisabled) return;\n      const value = this.value;\n      let input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = [];\n        }\n\n        const length = input.length;\n        input = input.filter(item => !this.valueComparator(item, value));\n\n        if (input.length === length) {\n          input.push(value);\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue;\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value;\n      } else {\n        input = !input;\n      }\n\n      this.validate(true, input);\n      this.internalValue = input;\n      this.hasColor = input;\n    },\n\n    onFocus() {\n      this.isFocused = true;\n    },\n\n    /** @abstract */\n    onKeydown(e) {}\n\n  }\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\selectable\\index.js"],"names":["VInput","Rippleable","Comparable","mixins","extend","name","model","prop","event","props","id","String","inputValue","falseValue","trueValue","multiple","type","Boolean","default","label","data","hasColor","lazyValue","computed","computedColor","isActive","undefined","color","isDark","appIsDark","isMultiple","Array","isArray","internalValue","value","input","some","item","valueComparator","isDirty","watch","val","methods","genLabel","options","call","on","click","e","preventDefault","onChange","genInput","attrs","$createElement","Object","assign","toString","disabled","isDisabled","computedId","role","domProps","checked","blur","onBlur","change","focus","onFocus","keydown","onKeydown","ref","isFocused","length","filter","push","validate"],"mappings":"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","sourcesContent":["// Components\nimport VInput from '../../components/VInput'; // Mixins\n\nimport Rippleable from '../rippleable';\nimport Comparable from '../comparable'; // Utilities\n\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(VInput, Rippleable, Comparable).extend({\n  name: 'selectable',\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n  props: {\n    id: String,\n    inputValue: null,\n    falseValue: null,\n    trueValue: null,\n    multiple: {\n      type: Boolean,\n      default: null\n    },\n    label: String\n  },\n\n  data() {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue\n    };\n  },\n\n  computed: {\n    computedColor() {\n      if (!this.isActive) return undefined;\n      if (this.color) return this.color;\n      if (this.isDark && !this.appIsDark) return 'white';\n      return 'accent';\n    },\n\n    isMultiple() {\n      return this.multiple === true || this.multiple === null && Array.isArray(this.internalValue);\n    },\n\n    isActive() {\n      const value = this.value;\n      const input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false;\n        return input.some(item => this.valueComparator(item, value));\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value ? this.valueComparator(value, input) : Boolean(input);\n      }\n\n      return this.valueComparator(input, this.trueValue);\n    },\n\n    isDirty() {\n      return this.isActive;\n    }\n\n  },\n  watch: {\n    inputValue(val) {\n      this.lazyValue = val;\n      this.hasColor = val;\n    }\n\n  },\n  methods: {\n    genLabel() {\n      const label = VInput.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data.on = {\n        click: e => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault();\n          this.onChange();\n        }\n      };\n      return label;\n    },\n\n    genInput(type, attrs) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown\n        },\n        ref: 'input'\n      });\n    },\n\n    onBlur() {\n      this.isFocused = false;\n    },\n\n    onChange() {\n      if (this.isDisabled) return;\n      const value = this.value;\n      let input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = [];\n        }\n\n        const length = input.length;\n        input = input.filter(item => !this.valueComparator(item, value));\n\n        if (input.length === length) {\n          input.push(value);\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue;\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value;\n      } else {\n        input = !input;\n      }\n\n      this.validate(true, input);\n      this.internalValue = input;\n      this.hasColor = input;\n    },\n\n    onFocus() {\n      this.isFocused = true;\n    },\n\n    /** @abstract */\n    onKeydown(e) {}\n\n  }\n});\n//# sourceMappingURL=index.js.map"]}]}
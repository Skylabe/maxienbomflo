{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\bootable\\index.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\bootable\\index.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Utilities\nimport { removed } from '../../util/console'; // Types\n\nimport Vue from 'vue';\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'bootable',\n  props: {\n    eager: Boolean\n  },\n  data: () => ({\n    isBooted: false\n  }),\n  computed: {\n    hasContent() {\n      return this.isBooted || this.eager || this.isActive;\n    }\n\n  },\n  watch: {\n    isActive() {\n      this.isBooted = true;\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this);\n    }\n  },\n\n  methods: {\n    showLazyContent(content) {\n      return this.hasContent ? content : undefined;\n    }\n\n  }\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\bootable\\index.js"],"names":["removed","Vue","extend","name","props","eager","Boolean","data","isBooted","computed","hasContent","isActive","watch","created","$attrs","methods","showLazyContent","content","undefined"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,oBAAxB,C,CAA8C;;AAE9C,OAAOC,GAAP,MAAgB,KAAhB;AACA;;;;;;;;;AASA;;AAEA,eAAeA,GAAG,CAACC,MAAJ,GAAaA,MAAb,CAAoB;AACjCC,EAAAA,IAAI,EAAE,UAD2B;AAEjCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC;AADF,GAF0B;AAKjCC,EAAAA,IAAI,EAAE,OAAO;AACXC,IAAAA,QAAQ,EAAE;AADC,GAAP,CAL2B;AAQjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,GAAG;AACX,aAAO,KAAKF,QAAL,IAAiB,KAAKH,KAAtB,IAA+B,KAAKM,QAA3C;AACD;;AAHO,GARuB;AAcjCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,QAAQ,GAAG;AACT,WAAKH,QAAL,GAAgB,IAAhB;AACD;;AAHI,GAd0B;;AAqBjCK,EAAAA,OAAO,GAAG;AACR;AACA,QAAI,UAAU,KAAKC,MAAnB,EAA2B;AACzBd,MAAAA,OAAO,CAAC,MAAD,EAAS,IAAT,CAAP;AACD;AACF,GA1BgC;;AA4BjCe,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,CAACC,OAAD,EAAU;AACvB,aAAO,KAAKP,UAAL,GAAkBO,OAAlB,GAA4BC,SAAnC;AACD;;AAHM;AA5BwB,CAApB,CAAf","sourcesContent":["// Utilities\nimport { removed } from '../../util/console'; // Types\n\nimport Vue from 'vue';\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'bootable',\n  props: {\n    eager: Boolean\n  },\n  data: () => ({\n    isBooted: false\n  }),\n  computed: {\n    hasContent() {\n      return this.isBooted || this.eager || this.isActive;\n    }\n\n  },\n  watch: {\n    isActive() {\n      this.isBooted = true;\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this);\n    }\n  },\n\n  methods: {\n    showLazyContent(content) {\n      return this.hasContent ? content : undefined;\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map"]}]}
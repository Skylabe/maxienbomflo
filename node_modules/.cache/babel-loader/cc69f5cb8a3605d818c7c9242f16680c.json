{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\colorable\\index.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\colorable\\index.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport { consoleError } from '../../util/console';\n\nfunction isCssColor(color) {\n  return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/);\n}\n\nexport default Vue.extend({\n  name: 'colorable',\n  props: {\n    color: String\n  },\n  methods: {\n    setBackgroundColor(color, data = {}) {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = { ...data.style,\n          'background-color': `${color}`,\n          'border-color': `${color}`\n        };\n      } else if (color) {\n        data.class = { ...data.class,\n          [color]: true\n        };\n      }\n\n      return data;\n    },\n\n    setTextColor(color, data = {}) {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = { ...data.style,\n          color: `${color}`,\n          'caret-color': `${color}`\n        };\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2);\n        data.class = { ...data.class,\n          [colorName + '--text']: true\n        };\n\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true;\n        }\n      }\n\n      return data;\n    }\n\n  }\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\mixins\\colorable\\index.js"],"names":["Vue","consoleError","isCssColor","color","match","extend","name","props","String","methods","setBackgroundColor","data","style","class","setTextColor","colorName","colorModifier","toString","trim","split"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SAAO,CAAC,CAACA,KAAF,IAAW,CAAC,CAACA,KAAK,CAACC,KAAN,CAAY,oBAAZ,CAApB;AACD;;AAED,eAAeJ,GAAG,CAACK,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAE,WADkB;AAExBC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,KAAK,EAAEK;AADF,GAFiB;AAKxBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,kBAAkB,CAACP,KAAD,EAAQQ,IAAI,GAAG,EAAf,EAAmB;AACnC,UAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAX,QAAAA,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAEa;;AAE/C,eAAOU,IAAP;AACD;;AAED,UAAI,OAAOA,IAAI,CAACE,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAZ,QAAAA,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAEa;;AAE/C,eAAOU,IAAP;AACD;;AAED,UAAIT,UAAU,CAACC,KAAD,CAAd,EAAuB;AACrBQ,QAAAA,IAAI,CAACC,KAAL,GAAa,EAAE,GAAGD,IAAI,CAACC,KAAV;AACX,8BAAqB,GAAET,KAAM,EADlB;AAEX,0BAAiB,GAAEA,KAAM;AAFd,SAAb;AAID,OALD,MAKO,IAAIA,KAAJ,EAAW;AAChBQ,QAAAA,IAAI,CAACE,KAAL,GAAa,EAAE,GAAGF,IAAI,CAACE,KAAV;AACX,WAACV,KAAD,GAAS;AADE,SAAb;AAGD;;AAED,aAAOQ,IAAP;AACD,KA5BM;;AA8BPG,IAAAA,YAAY,CAACX,KAAD,EAAQQ,IAAI,GAAG,EAAf,EAAmB;AAC7B,UAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAX,QAAAA,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAEa;;AAE/C,eAAOU,IAAP;AACD;;AAED,UAAI,OAAOA,IAAI,CAACE,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAZ,QAAAA,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAEa;;AAE/C,eAAOU,IAAP;AACD;;AAED,UAAIT,UAAU,CAACC,KAAD,CAAd,EAAuB;AACrBQ,QAAAA,IAAI,CAACC,KAAL,GAAa,EAAE,GAAGD,IAAI,CAACC,KAAV;AACXT,UAAAA,KAAK,EAAG,GAAEA,KAAM,EADL;AAEX,yBAAgB,GAAEA,KAAM;AAFb,SAAb;AAID,OALD,MAKO,IAAIA,KAAJ,EAAW;AAChB,cAAM,CAACY,SAAD,EAAYC,aAAZ,IAA6Bb,KAAK,CAACc,QAAN,GAAiBC,IAAjB,GAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAnC;AACAR,QAAAA,IAAI,CAACE,KAAL,GAAa,EAAE,GAAGF,IAAI,CAACE,KAAV;AACX,WAACE,SAAS,GAAG,QAAb,GAAwB;AADb,SAAb;;AAIA,YAAIC,aAAJ,EAAmB;AACjBL,UAAAA,IAAI,CAACE,KAAL,CAAW,WAAWG,aAAtB,IAAuC,IAAvC;AACD;AACF;;AAED,aAAOL,IAAP;AACD;;AA9DM;AALe,CAAX,CAAf","sourcesContent":["import Vue from 'vue';\nimport { consoleError } from '../../util/console';\n\nfunction isCssColor(color) {\n  return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/);\n}\n\nexport default Vue.extend({\n  name: 'colorable',\n  props: {\n    color: String\n  },\n  methods: {\n    setBackgroundColor(color, data = {}) {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = { ...data.style,\n          'background-color': `${color}`,\n          'border-color': `${color}`\n        };\n      } else if (color) {\n        data.class = { ...data.class,\n          [color]: true\n        };\n      }\n\n      return data;\n    },\n\n    setTextColor(color, data = {}) {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = { ...data.style,\n          color: `${color}`,\n          'caret-color': `${color}`\n        };\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2);\n        data.class = { ...data.class,\n          [colorName + '--text']: true\n        };\n\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true;\n        }\n      }\n\n      return data;\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map"]}]}
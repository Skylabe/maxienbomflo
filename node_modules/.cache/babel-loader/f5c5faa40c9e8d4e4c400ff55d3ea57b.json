{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VGrid\\VCol.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VGrid\\VCol.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'];\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\n\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n\n  if (val == null || val === false) {\n    return undefined;\n  }\n\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n\n  className += `-${val}`;\n  return className.toLowerCase();\n}\n\nconst cache = new Map();\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    justifySelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children,\n    parent\n  }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = '';\n\n    for (const prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    let classList = cache.get(cacheKey);\n\n    if (!classList) {\n      classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n      let type;\n\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'));\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n        [`justify-self-${props.justifySelf}`]: props.justifySelf\n      });\n      cache.set(cacheKey, classList);\n    }\n\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VGrid\\VCol.js"],"names":["Vue","mergeData","upperFirst","breakpoints","breakpointProps","reduce","props","val","type","Boolean","String","Number","default","offsetProps","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","undefined","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","cols","alignSelf","validator","str","includes","justifySelf","tag","render","h","data","children","parent","cacheKey","classList","get","forEach","value","push","hasColClasses","some","startsWith","set","class"],"mappings":"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","sourcesContent":["import \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'];\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\n\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n\n  if (val == null || val === false) {\n    return undefined;\n  }\n\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n\n  className += `-${val}`;\n  return className.toLowerCase();\n}\n\nconst cache = new Map();\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    justifySelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children,\n    parent\n  }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = '';\n\n    for (const prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    let classList = cache.get(cacheKey);\n\n    if (!classList) {\n      classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n      let type;\n\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'));\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n        [`justify-self-${props.justifySelf}`]: props.justifySelf\n      });\n      cache.set(cacheKey, classList);\n    }\n\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VCol.js.map"]}]}
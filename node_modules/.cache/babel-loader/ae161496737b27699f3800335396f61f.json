{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VLazy\\VLazy.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VLazy\\VLazy.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Mixins\nimport Toggleable from '../../mixins/toggleable'; // Directives\n\nimport intersect from '../../directives/intersect'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { convertToUnit, getSlot } from '../../util/helpers';\nexport default mixins(Toggleable).extend({\n  name: 'VLazy',\n  directives: {\n    intersect\n  },\n  props: {\n    minHeight: [Number, String],\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined\n      })\n    },\n    transition: {\n      type: String,\n      default: 'fade-transition'\n    }\n  },\n  computed: {\n    styles() {\n      return {\n        minHeight: parseInt(this.minHeight) ? convertToUnit(this.minHeight) : this.minHeight\n      };\n    }\n\n  },\n  methods: {\n    genContent() {\n      const slot = getSlot(this);\n      /* istanbul ignore if */\n\n      if (!this.transition) return slot;\n      const children = [];\n      if (this.isActive) children.push(slot);\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition\n        }\n      }, children);\n    },\n\n    onObserve(entries, observer, isIntersecting) {\n      if (this.isActive) return;\n      this.isActive = isIntersecting;\n    }\n\n  },\n\n  render(h) {\n    return h('div', {\n      staticClass: 'v-lazy',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n          options: this.options\n        }\n      }],\n      on: this.$listeners,\n      style: this.styles\n    }, [this.genContent()]);\n  }\n\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VLazy\\VLazy.js"],"names":["Toggleable","intersect","mixins","convertToUnit","getSlot","extend","name","directives","props","minHeight","Number","String","options","type","Object","default","root","undefined","rootMargin","threshold","transition","computed","styles","parseInt","methods","genContent","slot","children","isActive","push","$createElement","onObserve","entries","observer","isIntersecting","render","h","staticClass","attrs","$attrs","value","handler","on","$listeners","style"],"mappings":"AAAA;AACA,OAAOA,UAAP,MAAuB,yBAAvB,C,CAAkD;;AAElD,OAAOC,SAAP,MAAsB,4BAAtB,C,CAAoD;;AAEpD,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,oBAAvC;AACA,eAAeF,MAAM,CAACF,UAAD,CAAN,CAAmBK,MAAnB,CAA0B;AACvCC,EAAAA,IAAI,EAAE,OADiC;AAEvCC,EAAAA,UAAU,EAAE;AACVN,IAAAA;AADU,GAF2B;AAKvCO,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,CAACC,MAAD,EAASC,MAAT,CADN;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEC,MADC;AAEP;AACA;AACAC,MAAAA,OAAO,EAAE,OAAO;AACdC,QAAAA,IAAI,EAAEC,SADQ;AAEdC,QAAAA,UAAU,EAAED,SAFE;AAGdE,QAAAA,SAAS,EAAEF;AAHG,OAAP;AAJF,KAFJ;AAYLG,IAAAA,UAAU,EAAE;AACVP,MAAAA,IAAI,EAAEF,MADI;AAEVI,MAAAA,OAAO,EAAE;AAFC;AAZP,GALgC;AAsBvCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,GAAG;AACP,aAAO;AACLb,QAAAA,SAAS,EAAEc,QAAQ,CAAC,KAAKd,SAAN,CAAR,GAA2BN,aAAa,CAAC,KAAKM,SAAN,CAAxC,GAA2D,KAAKA;AADtE,OAAP;AAGD;;AALO,GAtB6B;AA8BvCe,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,GAAG;AACX,YAAMC,IAAI,GAAGtB,OAAO,CAAC,IAAD,CAApB;AACA;;AAEA,UAAI,CAAC,KAAKgB,UAAV,EAAsB,OAAOM,IAAP;AACtB,YAAMC,QAAQ,GAAG,EAAjB;AACA,UAAI,KAAKC,QAAT,EAAmBD,QAAQ,CAACE,IAAT,CAAcH,IAAd;AACnB,aAAO,KAAKI,cAAL,CAAoB,YAApB,EAAkC;AACvCtB,QAAAA,KAAK,EAAE;AACLF,UAAAA,IAAI,EAAE,KAAKc;AADN;AADgC,OAAlC,EAIJO,QAJI,CAAP;AAKD,KAbM;;AAePI,IAAAA,SAAS,CAACC,OAAD,EAAUC,QAAV,EAAoBC,cAApB,EAAoC;AAC3C,UAAI,KAAKN,QAAT,EAAmB;AACnB,WAAKA,QAAL,GAAgBM,cAAhB;AACD;;AAlBM,GA9B8B;;AAoDvCC,EAAAA,MAAM,CAACC,CAAD,EAAI;AACR,WAAOA,CAAC,CAAC,KAAD,EAAQ;AACdC,MAAAA,WAAW,EAAE,QADC;AAEdC,MAAAA,KAAK,EAAE,KAAKC,MAFE;AAGdhC,MAAAA,UAAU,EAAE,CAAC;AACXD,QAAAA,IAAI,EAAE,WADK;AAEXkC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,KAAKV,SADT;AAELnB,UAAAA,OAAO,EAAE,KAAKA;AAFT;AAFI,OAAD,CAHE;AAUd8B,MAAAA,EAAE,EAAE,KAAKC,UAVK;AAWdC,MAAAA,KAAK,EAAE,KAAKtB;AAXE,KAAR,EAYL,CAAC,KAAKG,UAAL,EAAD,CAZK,CAAR;AAaD;;AAlEsC,CAA1B,CAAf","sourcesContent":["// Mixins\nimport Toggleable from '../../mixins/toggleable'; // Directives\n\nimport intersect from '../../directives/intersect'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { convertToUnit, getSlot } from '../../util/helpers';\nexport default mixins(Toggleable).extend({\n  name: 'VLazy',\n  directives: {\n    intersect\n  },\n  props: {\n    minHeight: [Number, String],\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined\n      })\n    },\n    transition: {\n      type: String,\n      default: 'fade-transition'\n    }\n  },\n  computed: {\n    styles() {\n      return {\n        minHeight: parseInt(this.minHeight) ? convertToUnit(this.minHeight) : this.minHeight\n      };\n    }\n\n  },\n  methods: {\n    genContent() {\n      const slot = getSlot(this);\n      /* istanbul ignore if */\n\n      if (!this.transition) return slot;\n      const children = [];\n      if (this.isActive) children.push(slot);\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition\n        }\n      }, children);\n    },\n\n    onObserve(entries, observer, isIntersecting) {\n      if (this.isActive) return;\n      this.isActive = isIntersecting;\n    }\n\n  },\n\n  render(h) {\n    return h('div', {\n      staticClass: 'v-lazy',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n          options: this.options\n        }\n      }],\n      on: this.$listeners,\n      style: this.styles\n    }, [this.genContent()]);\n  }\n\n});\n//# sourceMappingURL=VLazy.js.map"]}]}
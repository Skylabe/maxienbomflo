{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\services\\theme\\index.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\services\\theme\\index.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'; // Utilities\n\nimport * as ThemeUtils from './utils'; // Types\n\nimport Vue from 'vue';\nexport class Theme extends Service {\n  constructor(options = {}) {\n    super();\n    this.disabled = false;\n    this.themes = {\n      light: {\n        primary: '#1976D2',\n        secondary: '#424242',\n        accent: '#82B1FF',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      dark: {\n        primary: '#2196F3',\n        secondary: '#424242',\n        accent: '#FF4081',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      }\n    };\n    this.defaults = this.themes;\n    this.isDark = null;\n    this.vueInstance = null;\n    this.vueMeta = null;\n\n    if (options.disable) {\n      this.disabled = true;\n      return;\n    }\n\n    this.options = options.options;\n    this.dark = Boolean(options.dark);\n    const themes = options.themes || {};\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false)\n    };\n  } // When setting css, check for element\n  // and apply new values\n\n\n  set css(val) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23();\n      }\n\n      return;\n    }\n\n    this.checkOrCreateStyleElement() && (this.styleEl.innerHTML = val);\n  }\n\n  set dark(val) {\n    const oldDark = this.isDark;\n    this.isDark = val; // Only apply theme after dark\n    // has already been set before\n\n    oldDark != null && this.applyTheme();\n  }\n\n  get dark() {\n    return Boolean(this.isDark);\n  } // Apply current theme default\n  // only called on client side\n\n\n  applyTheme() {\n    if (this.disabled) return this.clearCss();\n    this.css = this.generatedStyles;\n  }\n\n  clearCss() {\n    this.css = '';\n  } // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n\n\n  init(root, ssrContext) {\n    if (this.disabled) return;\n    /* istanbul ignore else */\n\n    if (root.$meta) {\n      this.initVueMeta(root);\n    } else if (ssrContext) {\n      this.initSSR(ssrContext);\n    }\n\n    this.initTheme();\n  } // Allows for you to set target theme\n\n\n  setTheme(theme, value) {\n    this.themes[theme] = Object.assign(this.themes[theme], value);\n    this.applyTheme();\n  } // Reset theme defaults\n\n\n  resetThemes() {\n    this.themes.light = Object.assign({}, this.defaults.light);\n    this.themes.dark = Object.assign({}, this.defaults.dark);\n    this.applyTheme();\n  } // Check for existence of style element\n\n\n  checkOrCreateStyleElement() {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet');\n    /* istanbul ignore next */\n\n    if (this.styleEl) return true;\n    this.genStyleElement(); // If doesn't have it, create it\n\n    return Boolean(this.styleEl);\n  }\n\n  fillVariant(theme = {}, dark) {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light'];\n    return Object.assign({}, defaultTheme, theme);\n  } // Generate the style element\n  // if applicable\n\n\n  genStyleElement() {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return;\n    /* istanbul ignore next */\n\n    const options = this.options || {};\n    this.styleEl = document.createElement('style');\n    this.styleEl.type = 'text/css';\n    this.styleEl.id = 'vuetify-theme-stylesheet';\n\n    if (options.cspNonce) {\n      this.styleEl.setAttribute('nonce', options.cspNonce);\n    }\n\n    document.head.appendChild(this.styleEl);\n  }\n\n  initVueMeta(root) {\n    this.vueMeta = root.$meta();\n\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23();\n      });\n      return;\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo';\n    const metaInfo = root.$options[metaKeyName] || {};\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || [];\n      const vuetifyStylesheet = metaInfo.style.find(s => s.id === 'vuetify-theme-stylesheet');\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce\n        });\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles;\n      }\n\n      return metaInfo;\n    };\n  }\n\n  applyVueMeta23() {\n    const {\n      set\n    } = this.vueMeta.addApp('vuetify');\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: (this.options || {}).cspNonce\n      }]\n    });\n  }\n\n  initSSR(ssrContext) {\n    const options = this.options || {}; // SSR\n\n    const nonce = options.cspNonce ? ` nonce=\"${options.cspNonce}\"` : '';\n    ssrContext.head = ssrContext.head || '';\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`;\n  }\n\n  initTheme() {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return; // If we get here somehow, ensure\n    // existing instance is removed\n\n    if (this.vueInstance) this.vueInstance.$destroy(); // Use Vue instance to track reactivity\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n\n    this.vueInstance = new Vue({\n      data: {\n        themes: this.themes\n      },\n      watch: {\n        themes: {\n          immediate: true,\n          deep: true,\n          handler: () => this.applyTheme()\n        }\n      }\n    });\n  }\n\n  get currentTheme() {\n    const target = this.dark ? 'dark' : 'light';\n    return this.themes[target];\n  }\n\n  get generatedStyles() {\n    const theme = this.parsedTheme;\n    /* istanbul ignore next */\n\n    const options = this.options || {};\n    let css;\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme);\n      /* istanbul ignore if */\n\n      if (css != null) return css;\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties);\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css);\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css);\n    }\n\n    return css;\n  }\n\n  get parsedTheme() {\n    /* istanbul ignore next */\n    const theme = this.currentTheme || {};\n    return ThemeUtils.parse(theme);\n  } // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n\n\n  get isVueMeta23() {\n    return typeof this.vueMeta.addApp === 'function';\n  }\n\n}\nTheme.property = 'theme';",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\services\\theme\\index.js"],"names":["Service","ThemeUtils","Vue","Theme","constructor","options","disabled","themes","light","primary","secondary","accent","error","info","success","warning","dark","defaults","isDark","vueInstance","vueMeta","disable","Boolean","fillVariant","css","val","isVueMeta23","applyVueMeta23","checkOrCreateStyleElement","styleEl","innerHTML","oldDark","applyTheme","clearCss","generatedStyles","init","root","ssrContext","$meta","initVueMeta","initSSR","initTheme","setTheme","theme","value","Object","assign","resetThemes","document","getElementById","genStyleElement","defaultTheme","createElement","type","id","cspNonce","setAttribute","head","appendChild","$nextTick","metaKeyName","getOptions","keyName","metaInfo","$options","style","vuetifyStylesheet","find","s","push","cssText","nonce","set","addApp","$destroy","data","watch","immediate","deep","handler","currentTheme","target","parsedTheme","themeCache","get","genStyles","customProperties","minifyTheme","parse","property"],"mappings":"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","sourcesContent":["/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'; // Utilities\n\nimport * as ThemeUtils from './utils'; // Types\n\nimport Vue from 'vue';\nexport class Theme extends Service {\n  constructor(options = {}) {\n    super();\n    this.disabled = false;\n    this.themes = {\n      light: {\n        primary: '#1976D2',\n        secondary: '#424242',\n        accent: '#82B1FF',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      dark: {\n        primary: '#2196F3',\n        secondary: '#424242',\n        accent: '#FF4081',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      }\n    };\n    this.defaults = this.themes;\n    this.isDark = null;\n    this.vueInstance = null;\n    this.vueMeta = null;\n\n    if (options.disable) {\n      this.disabled = true;\n      return;\n    }\n\n    this.options = options.options;\n    this.dark = Boolean(options.dark);\n    const themes = options.themes || {};\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false)\n    };\n  } // When setting css, check for element\n  // and apply new values\n\n\n  set css(val) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23();\n      }\n\n      return;\n    }\n\n    this.checkOrCreateStyleElement() && (this.styleEl.innerHTML = val);\n  }\n\n  set dark(val) {\n    const oldDark = this.isDark;\n    this.isDark = val; // Only apply theme after dark\n    // has already been set before\n\n    oldDark != null && this.applyTheme();\n  }\n\n  get dark() {\n    return Boolean(this.isDark);\n  } // Apply current theme default\n  // only called on client side\n\n\n  applyTheme() {\n    if (this.disabled) return this.clearCss();\n    this.css = this.generatedStyles;\n  }\n\n  clearCss() {\n    this.css = '';\n  } // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n\n\n  init(root, ssrContext) {\n    if (this.disabled) return;\n    /* istanbul ignore else */\n\n    if (root.$meta) {\n      this.initVueMeta(root);\n    } else if (ssrContext) {\n      this.initSSR(ssrContext);\n    }\n\n    this.initTheme();\n  } // Allows for you to set target theme\n\n\n  setTheme(theme, value) {\n    this.themes[theme] = Object.assign(this.themes[theme], value);\n    this.applyTheme();\n  } // Reset theme defaults\n\n\n  resetThemes() {\n    this.themes.light = Object.assign({}, this.defaults.light);\n    this.themes.dark = Object.assign({}, this.defaults.dark);\n    this.applyTheme();\n  } // Check for existence of style element\n\n\n  checkOrCreateStyleElement() {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet');\n    /* istanbul ignore next */\n\n    if (this.styleEl) return true;\n    this.genStyleElement(); // If doesn't have it, create it\n\n    return Boolean(this.styleEl);\n  }\n\n  fillVariant(theme = {}, dark) {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light'];\n    return Object.assign({}, defaultTheme, theme);\n  } // Generate the style element\n  // if applicable\n\n\n  genStyleElement() {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return;\n    /* istanbul ignore next */\n\n    const options = this.options || {};\n    this.styleEl = document.createElement('style');\n    this.styleEl.type = 'text/css';\n    this.styleEl.id = 'vuetify-theme-stylesheet';\n\n    if (options.cspNonce) {\n      this.styleEl.setAttribute('nonce', options.cspNonce);\n    }\n\n    document.head.appendChild(this.styleEl);\n  }\n\n  initVueMeta(root) {\n    this.vueMeta = root.$meta();\n\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23();\n      });\n      return;\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo';\n    const metaInfo = root.$options[metaKeyName] || {};\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || [];\n      const vuetifyStylesheet = metaInfo.style.find(s => s.id === 'vuetify-theme-stylesheet');\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce\n        });\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles;\n      }\n\n      return metaInfo;\n    };\n  }\n\n  applyVueMeta23() {\n    const {\n      set\n    } = this.vueMeta.addApp('vuetify');\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: (this.options || {}).cspNonce\n      }]\n    });\n  }\n\n  initSSR(ssrContext) {\n    const options = this.options || {}; // SSR\n\n    const nonce = options.cspNonce ? ` nonce=\"${options.cspNonce}\"` : '';\n    ssrContext.head = ssrContext.head || '';\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`;\n  }\n\n  initTheme() {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return; // If we get here somehow, ensure\n    // existing instance is removed\n\n    if (this.vueInstance) this.vueInstance.$destroy(); // Use Vue instance to track reactivity\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n\n    this.vueInstance = new Vue({\n      data: {\n        themes: this.themes\n      },\n      watch: {\n        themes: {\n          immediate: true,\n          deep: true,\n          handler: () => this.applyTheme()\n        }\n      }\n    });\n  }\n\n  get currentTheme() {\n    const target = this.dark ? 'dark' : 'light';\n    return this.themes[target];\n  }\n\n  get generatedStyles() {\n    const theme = this.parsedTheme;\n    /* istanbul ignore next */\n\n    const options = this.options || {};\n    let css;\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme);\n      /* istanbul ignore if */\n\n      if (css != null) return css;\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties);\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css);\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css);\n    }\n\n    return css;\n  }\n\n  get parsedTheme() {\n    /* istanbul ignore next */\n    const theme = this.currentTheme || {};\n    return ThemeUtils.parse(theme);\n  } // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n\n\n  get isVueMeta23() {\n    return typeof this.vueMeta.addApp === 'function';\n  }\n\n}\nTheme.property = 'theme';\n//# sourceMappingURL=index.js.map"]}]}
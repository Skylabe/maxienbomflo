{"remainingRequest":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VForm\\VForm.js","dependencies":[{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VForm\\VForm.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Mixins\nimport mixins from '../../util/mixins';\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport { provide as RegistrableProvide } from '../../mixins/registrable';\n/* @vue/component */\n\nexport default mixins(BindsAttrs, RegistrableProvide('form')\n/* @vue/component */\n).extend({\n  name: 'v-form',\n  inheritAttrs: false,\n  props: {\n    lazyValidation: Boolean,\n    value: Boolean\n  },\n  data: () => ({\n    inputs: [],\n    watchers: [],\n    errorBag: {}\n  }),\n  watch: {\n    errorBag: {\n      handler(val) {\n        const errors = Object.values(val).includes(true);\n        this.$emit('input', !errors);\n      },\n\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    watchInput(input) {\n      const watcher = input => {\n        return input.$watch('hasError', val => {\n          this.$set(this.errorBag, input._uid, val);\n        }, {\n          immediate: true\n        });\n      };\n\n      const watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {}\n      };\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', val => {\n          if (!val) return; // Only watch if we're not already doing it\n\n          if (this.errorBag.hasOwnProperty(input._uid)) return;\n          watchers.valid = watcher(input);\n        });\n      } else {\n        watchers.valid = watcher(input);\n      }\n\n      return watchers;\n    },\n\n    /** @public */\n    validate() {\n      return this.inputs.filter(input => !input.validate(true)).length === 0;\n    },\n\n    /** @public */\n    reset() {\n      this.inputs.forEach(input => input.reset());\n      this.resetErrorBag();\n    },\n\n    resetErrorBag() {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {};\n        }, 0);\n      }\n    },\n\n    /** @public */\n    resetValidation() {\n      this.inputs.forEach(input => input.resetValidation());\n      this.resetErrorBag();\n    },\n\n    register(input) {\n      this.inputs.push(input);\n      this.watchers.push(this.watchInput(input));\n    },\n\n    unregister(input) {\n      const found = this.inputs.find(i => i._uid === input._uid);\n      if (!found) return;\n      const unwatch = this.watchers.find(i => i._uid === found._uid);\n\n      if (unwatch) {\n        unwatch.valid();\n        unwatch.shouldValidate();\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid);\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid);\n      this.$delete(this.errorBag, found._uid);\n    }\n\n  },\n\n  render(h) {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$\n      },\n      on: {\n        submit: e => this.$emit('submit', e)\n      }\n    }, this.$slots.default);\n  }\n\n});",{"version":3,"sources":["C:\\Users\\breys\\Documents\\cours\\WEB\\maxienbomflo\\node_modules\\vuetify\\lib\\components\\VForm\\VForm.js"],"names":["mixins","BindsAttrs","provide","RegistrableProvide","extend","name","inheritAttrs","props","lazyValidation","Boolean","value","data","inputs","watchers","errorBag","watch","handler","val","errors","Object","values","includes","$emit","deep","immediate","methods","watchInput","input","watcher","$watch","$set","_uid","valid","shouldValidate","hasOwnProperty","validate","filter","length","reset","forEach","resetErrorBag","setTimeout","resetValidation","register","push","unregister","found","find","i","unwatch","$delete","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","default"],"mappings":"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","sourcesContent":["// Mixins\nimport mixins from '../../util/mixins';\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport { provide as RegistrableProvide } from '../../mixins/registrable';\n/* @vue/component */\n\nexport default mixins(BindsAttrs, RegistrableProvide('form')\n/* @vue/component */\n).extend({\n  name: 'v-form',\n  inheritAttrs: false,\n  props: {\n    lazyValidation: Boolean,\n    value: Boolean\n  },\n  data: () => ({\n    inputs: [],\n    watchers: [],\n    errorBag: {}\n  }),\n  watch: {\n    errorBag: {\n      handler(val) {\n        const errors = Object.values(val).includes(true);\n        this.$emit('input', !errors);\n      },\n\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    watchInput(input) {\n      const watcher = input => {\n        return input.$watch('hasError', val => {\n          this.$set(this.errorBag, input._uid, val);\n        }, {\n          immediate: true\n        });\n      };\n\n      const watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {}\n      };\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', val => {\n          if (!val) return; // Only watch if we're not already doing it\n\n          if (this.errorBag.hasOwnProperty(input._uid)) return;\n          watchers.valid = watcher(input);\n        });\n      } else {\n        watchers.valid = watcher(input);\n      }\n\n      return watchers;\n    },\n\n    /** @public */\n    validate() {\n      return this.inputs.filter(input => !input.validate(true)).length === 0;\n    },\n\n    /** @public */\n    reset() {\n      this.inputs.forEach(input => input.reset());\n      this.resetErrorBag();\n    },\n\n    resetErrorBag() {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {};\n        }, 0);\n      }\n    },\n\n    /** @public */\n    resetValidation() {\n      this.inputs.forEach(input => input.resetValidation());\n      this.resetErrorBag();\n    },\n\n    register(input) {\n      this.inputs.push(input);\n      this.watchers.push(this.watchInput(input));\n    },\n\n    unregister(input) {\n      const found = this.inputs.find(i => i._uid === input._uid);\n      if (!found) return;\n      const unwatch = this.watchers.find(i => i._uid === found._uid);\n\n      if (unwatch) {\n        unwatch.valid();\n        unwatch.shouldValidate();\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid);\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid);\n      this.$delete(this.errorBag, found._uid);\n    }\n\n  },\n\n  render(h) {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$\n      },\n      on: {\n        submit: e => this.$emit('submit', e)\n      }\n    }, this.$slots.default);\n  }\n\n});\n//# sourceMappingURL=VForm.js.map"]}]}